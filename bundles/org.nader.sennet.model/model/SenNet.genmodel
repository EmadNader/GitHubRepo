<?xml version="1.0" encoding="UTF-8"?>
<genmodel:GenModel xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore"
    xmlns:genmodel="http://www.eclipse.org/emf/2002/GenModel" modelDirectory="/org.nader.sennet.model/src-gen" editDirectory="/org.nader.sennet.model.edit/src-gen"
    editorDirectory="/org.nader.sennet.model.editor/src-gen" modelPluginID="org.nader.sennet.model"
    modelName="SenNet" rootExtendsClass="org.eclipse.emf.ecore.impl.MinimalEObjectImpl$Container"
    importerID="org.eclipse.emf.importer.ecore" complianceLevel="7.0" copyrightFields="false"
    operationReflection="true" importOrganizing="true">
  <foreignModel>SenNet.ecore</foreignModel>
  <genPackages prefix="Sennet" basePackage="org.nader" disposableProviderFactory="true"
      ecorePackage="SenNet.ecore#/">
    <genClasses ecoreClass="SenNet.ecore#//SeNetApp">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference SenNet.ecore#//SeNetApp/jobs"/>
    </genClasses>
    <nestedGenPackages prefix="Enums" disposableProviderFactory="true" ecorePackage="SenNet.ecore#//enums">
      <genEnums typeSafeEnumCompatible="false" ecoreEnum="SenNet.ecore#//enums/Fusion">
        <genEnumLiterals ecoreEnumLiteral="SenNet.ecore#//enums/Fusion/classification"/>
        <genEnumLiterals ecoreEnumLiteral="SenNet.ecore#//enums/Fusion/event_detection"/>
        <genEnumLiterals ecoreEnumLiteral="SenNet.ecore#//enums/Fusion/tracking"/>
        <genEnumLiterals ecoreEnumLiteral="SenNet.ecore#//enums/Fusion/decision_making"/>
      </genEnums>
      <genEnums typeSafeEnumCompatible="false" ecoreEnum="SenNet.ecore#//enums/Aggregation">
        <genEnumLiterals ecoreEnumLiteral="SenNet.ecore#//enums/Aggregation/filtering"/>
        <genEnumLiterals ecoreEnumLiteral="SenNet.ecore#//enums/Aggregation/compression"/>
        <genEnumLiterals ecoreEnumLiteral="SenNet.ecore#//enums/Aggregation/max"/>
        <genEnumLiterals ecoreEnumLiteral="SenNet.ecore#//enums/Aggregation/min"/>
        <genEnumLiterals ecoreEnumLiteral="SenNet.ecore#//enums/Aggregation/avg"/>
        <genEnumLiterals ecoreEnumLiteral="SenNet.ecore#//enums/Aggregation/count"/>
      </genEnums>
      <genEnums typeSafeEnumCompatible="false" ecoreEnum="SenNet.ecore#//enums/Position">
        <genEnumLiterals ecoreEnumLiteral="SenNet.ecore#//enums/Position/mobile"/>
        <genEnumLiterals ecoreEnumLiteral="SenNet.ecore#//enums/Position/static"/>
      </genEnums>
      <genEnums typeSafeEnumCompatible="false" ecoreEnum="SenNet.ecore#//enums/RoutingProtocol">
        <genEnumLiterals ecoreEnumLiteral="SenNet.ecore#//enums/RoutingProtocol/leach"/>
        <genEnumLiterals ecoreEnumLiteral="SenNet.ecore#//enums/RoutingProtocol/lqrp"/>
        <genEnumLiterals ecoreEnumLiteral="SenNet.ecore#//enums/RoutingProtocol/spin"/>
        <genEnumLiterals ecoreEnumLiteral="SenNet.ecore#//enums/RoutingProtocol/aodv"/>
        <genEnumLiterals ecoreEnumLiteral="SenNet.ecore#//enums/RoutingProtocol/dodv"/>
        <genEnumLiterals ecoreEnumLiteral="SenNet.ecore#//enums/RoutingProtocol/dsr"/>
        <genEnumLiterals ecoreEnumLiteral="SenNet.ecore#//enums/RoutingProtocol/dsdv"/>
        <genEnumLiterals ecoreEnumLiteral="SenNet.ecore#//enums/RoutingProtocol/gsr"/>
        <genEnumLiterals ecoreEnumLiteral="SenNet.ecore#//enums/RoutingProtocol/heed"/>
        <genEnumLiterals ecoreEnumLiteral="SenNet.ecore#//enums/RoutingProtocol/gaf"/>
        <genEnumLiterals ecoreEnumLiteral="SenNet.ecore#//enums/RoutingProtocol/gear"/>
        <genEnumLiterals ecoreEnumLiteral="SenNet.ecore#//enums/RoutingProtocol/tbf"/>
        <genEnumLiterals ecoreEnumLiteral="SenNet.ecore#//enums/RoutingProtocol/ead"/>
        <genEnumLiterals ecoreEnumLiteral="SenNet.ecore#//enums/RoutingProtocol/pegasis"/>
        <genEnumLiterals ecoreEnumLiteral="SenNet.ecore#//enums/RoutingProtocol/teen"/>
        <genEnumLiterals ecoreEnumLiteral="SenNet.ecore#//enums/RoutingProtocol/speed"/>
        <genEnumLiterals ecoreEnumLiteral="SenNet.ecore#//enums/RoutingProtocol/ctp"/>
        <genEnumLiterals ecoreEnumLiteral="SenNet.ecore#//enums/RoutingProtocol/dismentation"/>
        <genEnumLiterals ecoreEnumLiteral="SenNet.ecore#//enums/RoutingProtocol/activeMessage"/>
      </genEnums>
      <genEnums typeSafeEnumCompatible="false" ecoreEnum="SenNet.ecore#//enums/InterNodeComm">
        <genEnumLiterals ecoreEnumLiteral="SenNet.ecore#//enums/InterNodeComm/BT"/>
        <genEnumLiterals ecoreEnumLiteral="SenNet.ecore#//enums/InterNodeComm/Zigbee"/>
        <genEnumLiterals ecoreEnumLiteral="SenNet.ecore#//enums/InterNodeComm/WLan"/>
        <genEnumLiterals ecoreEnumLiteral="SenNet.ecore#//enums/InterNodeComm/RF"/>
      </genEnums>
      <genEnums typeSafeEnumCompatible="false" ecoreEnum="SenNet.ecore#//enums/LogicalSymbol">
        <genEnumLiterals ecoreEnumLiteral="SenNet.ecore#//enums/LogicalSymbol/equal"/>
        <genEnumLiterals ecoreEnumLiteral="SenNet.ecore#//enums/LogicalSymbol/greaterThan"/>
        <genEnumLiterals ecoreEnumLiteral="SenNet.ecore#//enums/LogicalSymbol/greaterOrEqualThan"/>
        <genEnumLiterals ecoreEnumLiteral="SenNet.ecore#//enums/LogicalSymbol/lessThan"/>
        <genEnumLiterals ecoreEnumLiteral="SenNet.ecore#//enums/LogicalSymbol/lessOrEqualThan"/>
        <genEnumLiterals ecoreEnumLiteral="SenNet.ecore#//enums/LogicalSymbol/notEqual"/>
      </genEnums>
      <genEnums typeSafeEnumCompatible="false" ecoreEnum="SenNet.ecore#//enums/Leds">
        <genEnumLiterals ecoreEnumLiteral="SenNet.ecore#//enums/Leds/led0"/>
        <genEnumLiterals ecoreEnumLiteral="SenNet.ecore#//enums/Leds/led1"/>
        <genEnumLiterals ecoreEnumLiteral="SenNet.ecore#//enums/Leds/led2"/>
      </genEnums>
      <genEnums typeSafeEnumCompatible="false" ecoreEnum="SenNet.ecore#//enums/LedStatus">
        <genEnumLiterals ecoreEnumLiteral="SenNet.ecore#//enums/LedStatus/on"/>
        <genEnumLiterals ecoreEnumLiteral="SenNet.ecore#//enums/LedStatus/off"/>
        <genEnumLiterals ecoreEnumLiteral="SenNet.ecore#//enums/LedStatus/toggle"/>
      </genEnums>
    </nestedGenPackages>
    <nestedGenPackages prefix="Toplevelstructure" disposableProviderFactory="true"
        ecorePackage="SenNet.ecore#//toplevelstructure">
      <genClasses image="false" ecoreClass="SenNet.ecore#//toplevelstructure/Identifiable">
        <genFeatures createChild="false" ecoreFeature="ecore:EAttribute SenNet.ecore#//toplevelstructure/Identifiable/id"/>
      </genClasses>
      <genClasses image="false" ecoreClass="SenNet.ecore#//toplevelstructure/NamedElement">
        <genFeatures createChild="false" ecoreFeature="ecore:EAttribute SenNet.ecore#//toplevelstructure/NamedElement/name"/>
      </genClasses>
    </nestedGenPackages>
    <nestedGenPackages prefix="Node" disposableProviderFactory="true" ecorePackage="SenNet.ecore#//node">
      <genClasses image="false" ecoreClass="SenNet.ecore#//node/AbstractNode">
        <genFeatures createChild="false" ecoreFeature="ecore:EAttribute SenNet.ecore#//node/AbstractNode/position"/>
        <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference SenNet.ecore#//node/AbstractNode/nodeResources"/>
      </genClasses>
      <genClasses image="false" ecoreClass="SenNet.ecore#//node/AbstractFlatNode"/>
      <genClasses image="false" ecoreClass="SenNet.ecore#//node/AbstractClusterNode"/>
      <genClasses ecoreClass="SenNet.ecore#//node/SensorNode"/>
      <genClasses ecoreClass="SenNet.ecore#//node/ClusterHeadNode"/>
      <genClasses ecoreClass="SenNet.ecore#//node/SinkNode"/>
      <genClasses ecoreClass="SenNet.ecore#//node/ComputationNode"/>
    </nestedGenPackages>
    <nestedGenPackages prefix="Sensors" disposableProviderFactory="true" ecorePackage="SenNet.ecore#//sensors">
      <genClasses image="false" ecoreClass="SenNet.ecore#//sensors/AbstractSensor"/>
      <genClasses ecoreClass="SenNet.ecore#//sensors/AccelerometerSensor"/>
      <genClasses ecoreClass="SenNet.ecore#//sensors/LightSensor"/>
      <genClasses ecoreClass="SenNet.ecore#//sensors/LocationSensor"/>
      <genClasses ecoreClass="SenNet.ecore#//sensors/MicrophoneSensor"/>
      <genClasses ecoreClass="SenNet.ecore#//sensors/TemperatureSensor"/>
      <genClasses ecoreClass="SenNet.ecore#//sensors/PressureSensor"/>
      <genClasses ecoreClass="SenNet.ecore#//sensors/HumiditySensor"/>
      <genClasses ecoreClass="SenNet.ecore#//sensors/VoltageSensor"/>
    </nestedGenPackages>
    <nestedGenPackages prefix="Network" disposableProviderFactory="true" ecorePackage="SenNet.ecore#//network">
      <genClasses image="false" ecoreClass="SenNet.ecore#//network/AbstractNetwork">
        <genFeatures createChild="false" ecoreFeature="ecore:EAttribute SenNet.ecore#//network/AbstractNetwork/nbOfNodes"/>
        <genFeatures createChild="false" ecoreFeature="ecore:EAttribute SenNet.ecore#//network/AbstractNetwork/interNodeComm"/>
        <genFeatures createChild="false" ecoreFeature="ecore:EAttribute SenNet.ecore#//network/AbstractNetwork/routingProtocol"/>
        <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference SenNet.ecore#//network/AbstractNetwork/resources"/>
        <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference SenNet.ecore#//network/AbstractNetwork/sink"/>
      </genClasses>
      <genClasses ecoreClass="SenNet.ecore#//network/FlatNetwork">
        <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference SenNet.ecore#//network/FlatNetwork/nodes"/>
      </genClasses>
      <genClasses ecoreClass="SenNet.ecore#//network/ClusteredNetwork">
        <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference SenNet.ecore#//network/ClusteredNetwork/clusters"/>
      </genClasses>
      <genClasses ecoreClass="SenNet.ecore#//network/Cluster">
        <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference SenNet.ecore#//network/Cluster/nodes"/>
        <genFeatures notify="false" createChild="false" propertySortChoices="true"
            ecoreFeature="ecore:EReference SenNet.ecore#//network/Cluster/resources"/>
      </genClasses>
    </nestedGenPackages>
    <nestedGenPackages prefix="Job" disposableProviderFactory="true" ecorePackage="SenNet.ecore#//job">
      <genClasses image="false" ecoreClass="SenNet.ecore#//job/AbstractJob">
        <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference SenNet.ecore#//job/AbstractJob/JobTargetNode"/>
        <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference SenNet.ecore#//job/AbstractJob/JobTargetNetwork"/>
        <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference SenNet.ecore#//job/AbstractJob/startEndTrigger"/>
        <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference SenNet.ecore#//job/AbstractJob/jobaction"/>
      </genClasses>
      <genClasses ecoreClass="SenNet.ecore#//job/SenseForwardJob">
        <genFeatures createChild="false" ecoreFeature="ecore:EAttribute SenNet.ecore#//job/SenseForwardJob/sensingThreshold"/>
      </genClasses>
      <genClasses ecoreClass="SenNet.ecore#//job/AggregationJob">
        <genFeatures createChild="false" ecoreFeature="ecore:EAttribute SenNet.ecore#//job/AggregationJob/aggregation"/>
      </genClasses>
      <genClasses ecoreClass="SenNet.ecore#//job/FusionJob">
        <genFeatures createChild="false" ecoreFeature="ecore:EAttribute SenNet.ecore#//job/FusionJob/fusion"/>
      </genClasses>
      <genClasses ecoreClass="SenNet.ecore#//job/SenseNowJob"/>
      <genClasses ecoreClass="SenNet.ecore#//job/SinkJob"/>
      <genClasses ecoreClass="SenNet.ecore#//job/RegularSenseJob">
        <genFeatures createChild="false" ecoreFeature="ecore:EAttribute SenNet.ecore#//job/RegularSenseJob/sensingThreshold"/>
      </genClasses>
      <nestedGenPackages prefix="Jobtrigger" disposableProviderFactory="true" ecorePackage="SenNet.ecore#//job/jobtrigger">
        <genClasses ecoreClass="SenNet.ecore#//job/jobtrigger/ReceiveMessageTrigger"/>
        <genClasses ecoreClass="SenNet.ecore#//job/jobtrigger/RecieveSerialMsgTrigger"/>
        <genClasses ecoreClass="SenNet.ecore#//job/jobtrigger/StartJobTrigger"/>
        <genClasses ecoreClass="SenNet.ecore#//job/jobtrigger/StopJobTrigger"/>
        <genClasses ecoreClass="SenNet.ecore#//job/jobtrigger/PushButtomTrigger"/>
        <genClasses image="false" ecoreClass="SenNet.ecore#//job/jobtrigger/AbstractRecieveTrigger"/>
        <genClasses image="false" ecoreClass="SenNet.ecore#//job/jobtrigger/AbstractStartEndingJobTrigger"/>
      </nestedGenPackages>
      <nestedGenPackages prefix="Jobaction" disposableProviderFactory="true" ecorePackage="SenNet.ecore#//job/jobaction">
        <genClasses image="false" ecoreClass="SenNet.ecore#//job/jobaction/AbstratAction">
          <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference SenNet.ecore#//job/jobaction/AbstratAction/condition"/>
        </genClasses>
        <genClasses ecoreClass="SenNet.ecore#//job/jobaction/ConditionalAction">
          <genFeatures createChild="false" ecoreFeature="ecore:EAttribute SenNet.ecore#//job/jobaction/ConditionalAction/sensorTerm"/>
          <genFeatures createChild="false" ecoreFeature="ecore:EAttribute SenNet.ecore#//job/jobaction/ConditionalAction/logicalSymbol"/>
          <genFeatures createChild="false" ecoreFeature="ecore:EAttribute SenNet.ecore#//job/jobaction/ConditionalAction/value"/>
          <genFeatures createChild="false" ecoreFeature="ecore:EAttribute SenNet.ecore#//job/jobaction/ConditionalAction/unit"/>
        </genClasses>
        <genClasses image="false" ecoreClass="SenNet.ecore#//job/jobaction/AbstractNodeMemoryAction"/>
        <genClasses ecoreClass="SenNet.ecore#//job/jobaction/ReadNodeMemoryAction"/>
        <genClasses ecoreClass="SenNet.ecore#//job/jobaction/WriteNodeMemoryAction"/>
        <genClasses ecoreClass="SenNet.ecore#//job/jobaction/SendMessageAction">
          <genFeatures createChild="false" ecoreFeature="ecore:EAttribute SenNet.ecore#//job/jobaction/SendMessageAction/sendMessageTo"/>
        </genClasses>
        <genClasses ecoreClass="SenNet.ecore#//job/jobaction/BlinkAction">
          <genFeatures createChild="false" ecoreFeature="ecore:EAttribute SenNet.ecore#//job/jobaction/BlinkAction/led"/>
          <genFeatures createChild="false" ecoreFeature="ecore:EAttribute SenNet.ecore#//job/jobaction/BlinkAction/status"/>
        </genClasses>
        <genClasses image="false" ecoreClass="SenNet.ecore#//job/jobaction/AbstractResponceAction"/>
        <genClasses ecoreClass="SenNet.ecore#//job/jobaction/SendSerialPortMsgAction"/>
      </nestedGenPackages>
    </nestedGenPackages>
  </genPackages>
</genmodel:GenModel>
