/*
* generated by Xtext
*/
package org.nader.sennet.xtext.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class SNDslGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class WSNappElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "WSNapp");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cWSNappAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cWSNappKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cIdKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cIdAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cIdEIntParserRuleCall_4_1_0 = (RuleCall)cIdAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cNetworkKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cNetworkAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cNetworkAbstractNetworkParserRuleCall_5_1_0 = (RuleCall)cNetworkAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cJobsKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cJobsAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cJobsAbstractJobParserRuleCall_6_2_0 = (RuleCall)cJobsAssignment_6_2.eContents().get(0);
		private final Group cGroup_6_3 = (Group)cGroup_6.eContents().get(3);
		private final Keyword cCommaKeyword_6_3_0 = (Keyword)cGroup_6_3.eContents().get(0);
		private final Assignment cJobsAssignment_6_3_1 = (Assignment)cGroup_6_3.eContents().get(1);
		private final RuleCall cJobsAbstractJobParserRuleCall_6_3_1_0 = (RuleCall)cJobsAssignment_6_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6_4 = (Keyword)cGroup_6.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//WSNapp:
		//	{WSNapp} "WSNapp" name=EString "{" ("id" id=EInt)? ("network" network=AbstractNetwork)? ("jobs" "{" jobs+=AbstractJob
		//	("," jobs+=AbstractJob)* "}")? "}";
		public ParserRule getRule() { return rule; }

		//{WSNapp} "WSNapp" name=EString "{" ("id" id=EInt)? ("network" network=AbstractNetwork)? ("jobs" "{" jobs+=AbstractJob
		//("," jobs+=AbstractJob)* "}")? "}"
		public Group getGroup() { return cGroup; }

		//{WSNapp}
		public Action getWSNappAction_0() { return cWSNappAction_0; }

		//"WSNapp"
		public Keyword getWSNappKeyword_1() { return cWSNappKeyword_1; }

		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//("id" id=EInt)?
		public Group getGroup_4() { return cGroup_4; }

		//"id"
		public Keyword getIdKeyword_4_0() { return cIdKeyword_4_0; }

		//id=EInt
		public Assignment getIdAssignment_4_1() { return cIdAssignment_4_1; }

		//EInt
		public RuleCall getIdEIntParserRuleCall_4_1_0() { return cIdEIntParserRuleCall_4_1_0; }

		//("network" network=AbstractNetwork)?
		public Group getGroup_5() { return cGroup_5; }

		//"network"
		public Keyword getNetworkKeyword_5_0() { return cNetworkKeyword_5_0; }

		//network=AbstractNetwork
		public Assignment getNetworkAssignment_5_1() { return cNetworkAssignment_5_1; }

		//AbstractNetwork
		public RuleCall getNetworkAbstractNetworkParserRuleCall_5_1_0() { return cNetworkAbstractNetworkParserRuleCall_5_1_0; }

		//("jobs" "{" jobs+=AbstractJob ("," jobs+=AbstractJob)* "}")?
		public Group getGroup_6() { return cGroup_6; }

		//"jobs"
		public Keyword getJobsKeyword_6_0() { return cJobsKeyword_6_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_6_1() { return cLeftCurlyBracketKeyword_6_1; }

		//jobs+=AbstractJob
		public Assignment getJobsAssignment_6_2() { return cJobsAssignment_6_2; }

		//AbstractJob
		public RuleCall getJobsAbstractJobParserRuleCall_6_2_0() { return cJobsAbstractJobParserRuleCall_6_2_0; }

		//("," jobs+=AbstractJob)*
		public Group getGroup_6_3() { return cGroup_6_3; }

		//","
		public Keyword getCommaKeyword_6_3_0() { return cCommaKeyword_6_3_0; }

		//jobs+=AbstractJob
		public Assignment getJobsAssignment_6_3_1() { return cJobsAssignment_6_3_1; }

		//AbstractJob
		public RuleCall getJobsAbstractJobParserRuleCall_6_3_1_0() { return cJobsAbstractJobParserRuleCall_6_3_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6_4() { return cRightCurlyBracketKeyword_6_4; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}

	public class AbstractNetworkElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AbstractNetwork");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cFlatNetworkParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cClusteredNetworkParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//AbstractNetwork returns network::AbstractNetwork:
		//	FlatNetwork | ClusteredNetwork;
		public ParserRule getRule() { return rule; }

		//FlatNetwork | ClusteredNetwork
		public Alternatives getAlternatives() { return cAlternatives; }

		//FlatNetwork
		public RuleCall getFlatNetworkParserRuleCall_0() { return cFlatNetworkParserRuleCall_0; }

		//ClusteredNetwork
		public RuleCall getClusteredNetworkParserRuleCall_1() { return cClusteredNetworkParserRuleCall_1; }
	}

	public class AbstractJobElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AbstractJob");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cContinuousJobParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cEventDrivenJobParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cPeriodicJobParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cRequestReplayJobParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//AbstractJob returns job::AbstractJob:
		//	ContinuousJob | EventDrivenJob | PeriodicJob | RequestReplayJob;
		public ParserRule getRule() { return rule; }

		//ContinuousJob | EventDrivenJob | PeriodicJob | RequestReplayJob
		public Alternatives getAlternatives() { return cAlternatives; }

		//ContinuousJob
		public RuleCall getContinuousJobParserRuleCall_0() { return cContinuousJobParserRuleCall_0; }

		//EventDrivenJob
		public RuleCall getEventDrivenJobParserRuleCall_1() { return cEventDrivenJobParserRuleCall_1; }

		//PeriodicJob
		public RuleCall getPeriodicJobParserRuleCall_2() { return cPeriodicJobParserRuleCall_2; }

		//RequestReplayJob
		public RuleCall getRequestReplayJobParserRuleCall_3() { return cRequestReplayJobParserRuleCall_3; }
	}

	public class AbstractPortElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AbstractPort");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cUsbPortParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cSerialPortParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cOutPort_ImplParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cInPort_ImplParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cTransmitterParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cRecieverParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		
		//AbstractPort returns port::AbstractPort:
		//	UsbPort | SerialPort | OutPort_Impl | InPort_Impl | Transmitter | Reciever;
		public ParserRule getRule() { return rule; }

		//UsbPort | SerialPort | OutPort_Impl | InPort_Impl | Transmitter | Reciever
		public Alternatives getAlternatives() { return cAlternatives; }

		//UsbPort
		public RuleCall getUsbPortParserRuleCall_0() { return cUsbPortParserRuleCall_0; }

		//SerialPort
		public RuleCall getSerialPortParserRuleCall_1() { return cSerialPortParserRuleCall_1; }

		//OutPort_Impl
		public RuleCall getOutPort_ImplParserRuleCall_2() { return cOutPort_ImplParserRuleCall_2; }

		//InPort_Impl
		public RuleCall getInPort_ImplParserRuleCall_3() { return cInPort_ImplParserRuleCall_3; }

		//Transmitter
		public RuleCall getTransmitterParserRuleCall_4() { return cTransmitterParserRuleCall_4; }

		//Reciever
		public RuleCall getRecieverParserRuleCall_5() { return cRecieverParserRuleCall_5; }
	}

	public class AbstractSensorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AbstractSensor");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cAccelerometerSensorParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cLightSensorParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cLocationSensorParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cMicrophoneSensorParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cTemperatureSensorParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cPressureSensorParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cHumiditySensorParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cChemicalSensorParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		
		//AbstractSensor returns sensor::AbstractSensor:
		//	AccelerometerSensor | LightSensor | LocationSensor | MicrophoneSensor | TemperatureSensor | PressureSensor |
		//	HumiditySensor | ChemicalSensor;
		public ParserRule getRule() { return rule; }

		//AccelerometerSensor | LightSensor | LocationSensor | MicrophoneSensor | TemperatureSensor | PressureSensor |
		//HumiditySensor | ChemicalSensor
		public Alternatives getAlternatives() { return cAlternatives; }

		//AccelerometerSensor
		public RuleCall getAccelerometerSensorParserRuleCall_0() { return cAccelerometerSensorParserRuleCall_0; }

		//LightSensor
		public RuleCall getLightSensorParserRuleCall_1() { return cLightSensorParserRuleCall_1; }

		//LocationSensor
		public RuleCall getLocationSensorParserRuleCall_2() { return cLocationSensorParserRuleCall_2; }

		//MicrophoneSensor
		public RuleCall getMicrophoneSensorParserRuleCall_3() { return cMicrophoneSensorParserRuleCall_3; }

		//TemperatureSensor
		public RuleCall getTemperatureSensorParserRuleCall_4() { return cTemperatureSensorParserRuleCall_4; }

		//PressureSensor
		public RuleCall getPressureSensorParserRuleCall_5() { return cPressureSensorParserRuleCall_5; }

		//HumiditySensor
		public RuleCall getHumiditySensorParserRuleCall_6() { return cHumiditySensorParserRuleCall_6; }

		//ChemicalSensor
		public RuleCall getChemicalSensorParserRuleCall_7() { return cChemicalSensorParserRuleCall_7; }
	}

	public class AbstractFlatNodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AbstractFlatNode");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSensorNodeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cComputationNodeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//AbstractFlatNode returns node::AbstractFlatNode:
		//	SensorNode | ComputationNode;
		public ParserRule getRule() { return rule; }

		//SensorNode | ComputationNode
		public Alternatives getAlternatives() { return cAlternatives; }

		//SensorNode
		public RuleCall getSensorNodeParserRuleCall_0() { return cSensorNodeParserRuleCall_0; }

		//ComputationNode
		public RuleCall getComputationNodeParserRuleCall_1() { return cComputationNodeParserRuleCall_1; }
	}

	public class AbstractClusterNodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AbstractClusterNode");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSensorNodeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cClusterHeadNodeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//AbstractClusterNode returns node::AbstractClusterNode:
		//	SensorNode | ClusterHeadNode;
		public ParserRule getRule() { return rule; }

		//SensorNode | ClusterHeadNode
		public Alternatives getAlternatives() { return cAlternatives; }

		//SensorNode
		public RuleCall getSensorNodeParserRuleCall_0() { return cSensorNodeParserRuleCall_0; }

		//ClusterHeadNode
		public RuleCall getClusterHeadNodeParserRuleCall_1() { return cClusterHeadNodeParserRuleCall_1; }
	}

	public class AbstractJobActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AbstractJobAction");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSenseForwardActionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cAggregationActionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cFusionActionParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cReadNodeMemoryActionParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cWriteNodeMemoryActionParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cSendMessageActionParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cReceiveMessageActionParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		
		//AbstractJobAction returns actions::AbstractJobAction:
		//	SenseForwardAction | AggregationAction | FusionAction | ReadNodeMemoryAction | WriteNodeMemoryAction |
		//	SendMessageAction | ReceiveMessageAction;
		public ParserRule getRule() { return rule; }

		//SenseForwardAction | AggregationAction | FusionAction | ReadNodeMemoryAction | WriteNodeMemoryAction | SendMessageAction
		//| ReceiveMessageAction
		public Alternatives getAlternatives() { return cAlternatives; }

		//SenseForwardAction
		public RuleCall getSenseForwardActionParserRuleCall_0() { return cSenseForwardActionParserRuleCall_0; }

		//AggregationAction
		public RuleCall getAggregationActionParserRuleCall_1() { return cAggregationActionParserRuleCall_1; }

		//FusionAction
		public RuleCall getFusionActionParserRuleCall_2() { return cFusionActionParserRuleCall_2; }

		//ReadNodeMemoryAction
		public RuleCall getReadNodeMemoryActionParserRuleCall_3() { return cReadNodeMemoryActionParserRuleCall_3; }

		//WriteNodeMemoryAction
		public RuleCall getWriteNodeMemoryActionParserRuleCall_4() { return cWriteNodeMemoryActionParserRuleCall_4; }

		//SendMessageAction
		public RuleCall getSendMessageActionParserRuleCall_5() { return cSendMessageActionParserRuleCall_5; }

		//ReceiveMessageAction
		public RuleCall getReceiveMessageActionParserRuleCall_6() { return cReceiveMessageActionParserRuleCall_6; }
	}

	public class AbstractNodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AbstractNode");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSensorNodeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cClusterHeadNodeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cSinkNodeParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cComputationNodeParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//AbstractNode returns node::AbstractNode:
		//	SensorNode | ClusterHeadNode | SinkNode | ComputationNode;
		public ParserRule getRule() { return rule; }

		//SensorNode | ClusterHeadNode | SinkNode | ComputationNode
		public Alternatives getAlternatives() { return cAlternatives; }

		//SensorNode
		public RuleCall getSensorNodeParserRuleCall_0() { return cSensorNodeParserRuleCall_0; }

		//ClusterHeadNode
		public RuleCall getClusterHeadNodeParserRuleCall_1() { return cClusterHeadNodeParserRuleCall_1; }

		//SinkNode
		public RuleCall getSinkNodeParserRuleCall_2() { return cSinkNodeParserRuleCall_2; }

		//ComputationNode
		public RuleCall getComputationNodeParserRuleCall_3() { return cComputationNodeParserRuleCall_3; }
	}

	public class OutPortElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "OutPort");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cOutPort_ImplParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cUsbPortParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cSerialPortParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cTransmitterParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//OutPort returns port::OutPort:
		//	OutPort_Impl | UsbPort | SerialPort | Transmitter;
		public ParserRule getRule() { return rule; }

		//OutPort_Impl | UsbPort | SerialPort | Transmitter
		public Alternatives getAlternatives() { return cAlternatives; }

		//OutPort_Impl
		public RuleCall getOutPort_ImplParserRuleCall_0() { return cOutPort_ImplParserRuleCall_0; }

		//UsbPort
		public RuleCall getUsbPortParserRuleCall_1() { return cUsbPortParserRuleCall_1; }

		//SerialPort
		public RuleCall getSerialPortParserRuleCall_2() { return cSerialPortParserRuleCall_2; }

		//Transmitter
		public RuleCall getTransmitterParserRuleCall_3() { return cTransmitterParserRuleCall_3; }
	}

	public class InPortElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "InPort");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cInPort_ImplParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cUsbPortParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cSerialPortParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cRecieverParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//InPort returns port::InPort:
		//	InPort_Impl | UsbPort | SerialPort | Reciever;
		public ParserRule getRule() { return rule; }

		//InPort_Impl | UsbPort | SerialPort | Reciever
		public Alternatives getAlternatives() { return cAlternatives; }

		//InPort_Impl
		public RuleCall getInPort_ImplParserRuleCall_0() { return cInPort_ImplParserRuleCall_0; }

		//UsbPort
		public RuleCall getUsbPortParserRuleCall_1() { return cUsbPortParserRuleCall_1; }

		//SerialPort
		public RuleCall getSerialPortParserRuleCall_2() { return cSerialPortParserRuleCall_2; }

		//Reciever
		public RuleCall getRecieverParserRuleCall_3() { return cRecieverParserRuleCall_3; }
	}

	public class EIntElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EInt");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//EInt returns ecore::EInt:
		//	"-"? INT;
		public ParserRule getRule() { return rule; }

		//"-"? INT
		public Group getGroup() { return cGroup; }

		//"-"?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }

		//INT
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
	}

	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString returns ecore::EString:
		//	STRING | ID;
		public ParserRule getRule() { return rule; }

		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}

	public class SinkNodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SinkNode");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSinkNodeAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cSinkNodeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cIdKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cIdAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cIdEIntParserRuleCall_3_1_0 = (RuleCall)cIdAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cPositionKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cPositionAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cPositionPositionEnumRuleCall_4_1_0 = (RuleCall)cPositionAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cPortsKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cPortsAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final CrossReference cPortsAbstractPortCrossReference_5_2_0 = (CrossReference)cPortsAssignment_5_2.eContents().get(0);
		private final RuleCall cPortsAbstractPortEStringParserRuleCall_5_2_0_1 = (RuleCall)cPortsAbstractPortCrossReference_5_2_0.eContents().get(1);
		private final Group cGroup_5_3 = (Group)cGroup_5.eContents().get(3);
		private final Keyword cCommaKeyword_5_3_0 = (Keyword)cGroup_5_3.eContents().get(0);
		private final Assignment cPortsAssignment_5_3_1 = (Assignment)cGroup_5_3.eContents().get(1);
		private final CrossReference cPortsAbstractPortCrossReference_5_3_1_0 = (CrossReference)cPortsAssignment_5_3_1.eContents().get(0);
		private final RuleCall cPortsAbstractPortEStringParserRuleCall_5_3_1_0_1 = (RuleCall)cPortsAbstractPortCrossReference_5_3_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_5_4 = (Keyword)cGroup_5.eContents().get(4);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cSensorsKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cSensorsAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final CrossReference cSensorsAbstractSensorCrossReference_6_2_0 = (CrossReference)cSensorsAssignment_6_2.eContents().get(0);
		private final RuleCall cSensorsAbstractSensorEStringParserRuleCall_6_2_0_1 = (RuleCall)cSensorsAbstractSensorCrossReference_6_2_0.eContents().get(1);
		private final Group cGroup_6_3 = (Group)cGroup_6.eContents().get(3);
		private final Keyword cCommaKeyword_6_3_0 = (Keyword)cGroup_6_3.eContents().get(0);
		private final Assignment cSensorsAssignment_6_3_1 = (Assignment)cGroup_6_3.eContents().get(1);
		private final CrossReference cSensorsAbstractSensorCrossReference_6_3_1_0 = (CrossReference)cSensorsAssignment_6_3_1.eContents().get(0);
		private final RuleCall cSensorsAbstractSensorEStringParserRuleCall_6_3_1_0_1 = (RuleCall)cSensorsAbstractSensorCrossReference_6_3_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_6_4 = (Keyword)cGroup_6.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//SinkNode returns node::SinkNode:
		//	{node::SinkNode} "SinkNode" "{" ("id" id=EInt)? ("position" position=Position)? ("ports" "("
		//	ports+=[port::AbstractPort|EString] ("," ports+=[port::AbstractPort|EString])* ")")? ("sensors" "("
		//	sensors+=[sensor::AbstractSensor|EString] ("," sensors+=[sensor::AbstractSensor|EString])* ")")? "}";
		public ParserRule getRule() { return rule; }

		//{node::SinkNode} "SinkNode" "{" ("id" id=EInt)? ("position" position=Position)? ("ports" "("
		//ports+=[port::AbstractPort|EString] ("," ports+=[port::AbstractPort|EString])* ")")? ("sensors" "("
		//sensors+=[sensor::AbstractSensor|EString] ("," sensors+=[sensor::AbstractSensor|EString])* ")")? "}"
		public Group getGroup() { return cGroup; }

		//{node::SinkNode}
		public Action getSinkNodeAction_0() { return cSinkNodeAction_0; }

		//"SinkNode"
		public Keyword getSinkNodeKeyword_1() { return cSinkNodeKeyword_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//("id" id=EInt)?
		public Group getGroup_3() { return cGroup_3; }

		//"id"
		public Keyword getIdKeyword_3_0() { return cIdKeyword_3_0; }

		//id=EInt
		public Assignment getIdAssignment_3_1() { return cIdAssignment_3_1; }

		//EInt
		public RuleCall getIdEIntParserRuleCall_3_1_0() { return cIdEIntParserRuleCall_3_1_0; }

		//("position" position=Position)?
		public Group getGroup_4() { return cGroup_4; }

		//"position"
		public Keyword getPositionKeyword_4_0() { return cPositionKeyword_4_0; }

		//position=Position
		public Assignment getPositionAssignment_4_1() { return cPositionAssignment_4_1; }

		//Position
		public RuleCall getPositionPositionEnumRuleCall_4_1_0() { return cPositionPositionEnumRuleCall_4_1_0; }

		//("ports" "(" ports+=[port::AbstractPort|EString] ("," ports+=[port::AbstractPort|EString])* ")")?
		public Group getGroup_5() { return cGroup_5; }

		//"ports"
		public Keyword getPortsKeyword_5_0() { return cPortsKeyword_5_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_5_1() { return cLeftParenthesisKeyword_5_1; }

		//ports+=[port::AbstractPort|EString]
		public Assignment getPortsAssignment_5_2() { return cPortsAssignment_5_2; }

		//[port::AbstractPort|EString]
		public CrossReference getPortsAbstractPortCrossReference_5_2_0() { return cPortsAbstractPortCrossReference_5_2_0; }

		//EString
		public RuleCall getPortsAbstractPortEStringParserRuleCall_5_2_0_1() { return cPortsAbstractPortEStringParserRuleCall_5_2_0_1; }

		//("," ports+=[port::AbstractPort|EString])*
		public Group getGroup_5_3() { return cGroup_5_3; }

		//","
		public Keyword getCommaKeyword_5_3_0() { return cCommaKeyword_5_3_0; }

		//ports+=[port::AbstractPort|EString]
		public Assignment getPortsAssignment_5_3_1() { return cPortsAssignment_5_3_1; }

		//[port::AbstractPort|EString]
		public CrossReference getPortsAbstractPortCrossReference_5_3_1_0() { return cPortsAbstractPortCrossReference_5_3_1_0; }

		//EString
		public RuleCall getPortsAbstractPortEStringParserRuleCall_5_3_1_0_1() { return cPortsAbstractPortEStringParserRuleCall_5_3_1_0_1; }

		//")"
		public Keyword getRightParenthesisKeyword_5_4() { return cRightParenthesisKeyword_5_4; }

		//("sensors" "(" sensors+=[sensor::AbstractSensor|EString] ("," sensors+=[sensor::AbstractSensor|EString])* ")")?
		public Group getGroup_6() { return cGroup_6; }

		//"sensors"
		public Keyword getSensorsKeyword_6_0() { return cSensorsKeyword_6_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_6_1() { return cLeftParenthesisKeyword_6_1; }

		//sensors+=[sensor::AbstractSensor|EString]
		public Assignment getSensorsAssignment_6_2() { return cSensorsAssignment_6_2; }

		//[sensor::AbstractSensor|EString]
		public CrossReference getSensorsAbstractSensorCrossReference_6_2_0() { return cSensorsAbstractSensorCrossReference_6_2_0; }

		//EString
		public RuleCall getSensorsAbstractSensorEStringParserRuleCall_6_2_0_1() { return cSensorsAbstractSensorEStringParserRuleCall_6_2_0_1; }

		//("," sensors+=[sensor::AbstractSensor|EString])*
		public Group getGroup_6_3() { return cGroup_6_3; }

		//","
		public Keyword getCommaKeyword_6_3_0() { return cCommaKeyword_6_3_0; }

		//sensors+=[sensor::AbstractSensor|EString]
		public Assignment getSensorsAssignment_6_3_1() { return cSensorsAssignment_6_3_1; }

		//[sensor::AbstractSensor|EString]
		public CrossReference getSensorsAbstractSensorCrossReference_6_3_1_0() { return cSensorsAbstractSensorCrossReference_6_3_1_0; }

		//EString
		public RuleCall getSensorsAbstractSensorEStringParserRuleCall_6_3_1_0_1() { return cSensorsAbstractSensorEStringParserRuleCall_6_3_1_0_1; }

		//")"
		public Keyword getRightParenthesisKeyword_6_4() { return cRightParenthesisKeyword_6_4; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}

	public class FlatNetworkElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FlatNetwork");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cFlatNetworkAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cFlatNetworkKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cIdKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cIdAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cIdEIntParserRuleCall_3_1_0 = (RuleCall)cIdAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cNbOfNodesKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cNbOfNodesAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cNbOfNodesEIntParserRuleCall_4_1_0 = (RuleCall)cNbOfNodesAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cInterNodeCommKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cInterNodeCommAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cInterNodeCommInterNodeCommEnumRuleCall_5_1_0 = (RuleCall)cInterNodeCommAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cRoutingProtocolKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cRoutingProtocolAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cRoutingProtocolRoutingProtocolEnumRuleCall_6_1_0 = (RuleCall)cRoutingProtocolAssignment_6_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cSinkKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cSinkAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final CrossReference cSinkSinkNodeCrossReference_7_1_0 = (CrossReference)cSinkAssignment_7_1.eContents().get(0);
		private final RuleCall cSinkSinkNodeEStringParserRuleCall_7_1_0_1 = (RuleCall)cSinkSinkNodeCrossReference_7_1_0.eContents().get(1);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cSensorsKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_8_1 = (Keyword)cGroup_8.eContents().get(1);
		private final Assignment cSensorsAssignment_8_2 = (Assignment)cGroup_8.eContents().get(2);
		private final RuleCall cSensorsAbstractSensorParserRuleCall_8_2_0 = (RuleCall)cSensorsAssignment_8_2.eContents().get(0);
		private final Group cGroup_8_3 = (Group)cGroup_8.eContents().get(3);
		private final Keyword cCommaKeyword_8_3_0 = (Keyword)cGroup_8_3.eContents().get(0);
		private final Assignment cSensorsAssignment_8_3_1 = (Assignment)cGroup_8_3.eContents().get(1);
		private final RuleCall cSensorsAbstractSensorParserRuleCall_8_3_1_0 = (RuleCall)cSensorsAssignment_8_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8_4 = (Keyword)cGroup_8.eContents().get(4);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cPortsKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_9_1 = (Keyword)cGroup_9.eContents().get(1);
		private final Assignment cPortsAssignment_9_2 = (Assignment)cGroup_9.eContents().get(2);
		private final RuleCall cPortsAbstractPortParserRuleCall_9_2_0 = (RuleCall)cPortsAssignment_9_2.eContents().get(0);
		private final Group cGroup_9_3 = (Group)cGroup_9.eContents().get(3);
		private final Keyword cCommaKeyword_9_3_0 = (Keyword)cGroup_9_3.eContents().get(0);
		private final Assignment cPortsAssignment_9_3_1 = (Assignment)cGroup_9_3.eContents().get(1);
		private final RuleCall cPortsAbstractPortParserRuleCall_9_3_1_0 = (RuleCall)cPortsAssignment_9_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9_4 = (Keyword)cGroup_9.eContents().get(4);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cNodesKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_10_1 = (Keyword)cGroup_10.eContents().get(1);
		private final Assignment cNodesAssignment_10_2 = (Assignment)cGroup_10.eContents().get(2);
		private final RuleCall cNodesAbstractFlatNodeParserRuleCall_10_2_0 = (RuleCall)cNodesAssignment_10_2.eContents().get(0);
		private final Group cGroup_10_3 = (Group)cGroup_10.eContents().get(3);
		private final Keyword cCommaKeyword_10_3_0 = (Keyword)cGroup_10_3.eContents().get(0);
		private final Assignment cNodesAssignment_10_3_1 = (Assignment)cGroup_10_3.eContents().get(1);
		private final RuleCall cNodesAbstractFlatNodeParserRuleCall_10_3_1_0 = (RuleCall)cNodesAssignment_10_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_10_4 = (Keyword)cGroup_10.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		//FlatNetwork returns network::FlatNetwork:
		//	{network::FlatNetwork} "FlatNetwork" "{" ("id" id=EInt)? ("nbOfNodes" nbOfNodes=EInt)? ("interNodeComm"
		//	interNodeComm=InterNodeComm)? ("routingProtocol" routingProtocol=RoutingProtocol)? ("sink"
		//	sink=[node::SinkNode|EString])? ("sensors" "{" sensors+=AbstractSensor ("," sensors+=AbstractSensor)* "}")? ("ports"
		//	"{" ports+=AbstractPort ("," ports+=AbstractPort)* "}")? ("nodes" "{" nodes+=AbstractFlatNode (","
		//	nodes+=AbstractFlatNode)* "}")? "}";
		public ParserRule getRule() { return rule; }

		//{network::FlatNetwork} "FlatNetwork" "{" ("id" id=EInt)? ("nbOfNodes" nbOfNodes=EInt)? ("interNodeComm"
		//interNodeComm=InterNodeComm)? ("routingProtocol" routingProtocol=RoutingProtocol)? ("sink"
		//sink=[node::SinkNode|EString])? ("sensors" "{" sensors+=AbstractSensor ("," sensors+=AbstractSensor)* "}")? ("ports"
		//"{" ports+=AbstractPort ("," ports+=AbstractPort)* "}")? ("nodes" "{" nodes+=AbstractFlatNode (","
		//nodes+=AbstractFlatNode)* "}")? "}"
		public Group getGroup() { return cGroup; }

		//{network::FlatNetwork}
		public Action getFlatNetworkAction_0() { return cFlatNetworkAction_0; }

		//"FlatNetwork"
		public Keyword getFlatNetworkKeyword_1() { return cFlatNetworkKeyword_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//("id" id=EInt)?
		public Group getGroup_3() { return cGroup_3; }

		//"id"
		public Keyword getIdKeyword_3_0() { return cIdKeyword_3_0; }

		//id=EInt
		public Assignment getIdAssignment_3_1() { return cIdAssignment_3_1; }

		//EInt
		public RuleCall getIdEIntParserRuleCall_3_1_0() { return cIdEIntParserRuleCall_3_1_0; }

		//("nbOfNodes" nbOfNodes=EInt)?
		public Group getGroup_4() { return cGroup_4; }

		//"nbOfNodes"
		public Keyword getNbOfNodesKeyword_4_0() { return cNbOfNodesKeyword_4_0; }

		//nbOfNodes=EInt
		public Assignment getNbOfNodesAssignment_4_1() { return cNbOfNodesAssignment_4_1; }

		//EInt
		public RuleCall getNbOfNodesEIntParserRuleCall_4_1_0() { return cNbOfNodesEIntParserRuleCall_4_1_0; }

		//("interNodeComm" interNodeComm=InterNodeComm)?
		public Group getGroup_5() { return cGroup_5; }

		//"interNodeComm"
		public Keyword getInterNodeCommKeyword_5_0() { return cInterNodeCommKeyword_5_0; }

		//interNodeComm=InterNodeComm
		public Assignment getInterNodeCommAssignment_5_1() { return cInterNodeCommAssignment_5_1; }

		//InterNodeComm
		public RuleCall getInterNodeCommInterNodeCommEnumRuleCall_5_1_0() { return cInterNodeCommInterNodeCommEnumRuleCall_5_1_0; }

		//("routingProtocol" routingProtocol=RoutingProtocol)?
		public Group getGroup_6() { return cGroup_6; }

		//"routingProtocol"
		public Keyword getRoutingProtocolKeyword_6_0() { return cRoutingProtocolKeyword_6_0; }

		//routingProtocol=RoutingProtocol
		public Assignment getRoutingProtocolAssignment_6_1() { return cRoutingProtocolAssignment_6_1; }

		//RoutingProtocol
		public RuleCall getRoutingProtocolRoutingProtocolEnumRuleCall_6_1_0() { return cRoutingProtocolRoutingProtocolEnumRuleCall_6_1_0; }

		//("sink" sink=[node::SinkNode|EString])?
		public Group getGroup_7() { return cGroup_7; }

		//"sink"
		public Keyword getSinkKeyword_7_0() { return cSinkKeyword_7_0; }

		//sink=[node::SinkNode|EString]
		public Assignment getSinkAssignment_7_1() { return cSinkAssignment_7_1; }

		//[node::SinkNode|EString]
		public CrossReference getSinkSinkNodeCrossReference_7_1_0() { return cSinkSinkNodeCrossReference_7_1_0; }

		//EString
		public RuleCall getSinkSinkNodeEStringParserRuleCall_7_1_0_1() { return cSinkSinkNodeEStringParserRuleCall_7_1_0_1; }

		//("sensors" "{" sensors+=AbstractSensor ("," sensors+=AbstractSensor)* "}")?
		public Group getGroup_8() { return cGroup_8; }

		//"sensors"
		public Keyword getSensorsKeyword_8_0() { return cSensorsKeyword_8_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_8_1() { return cLeftCurlyBracketKeyword_8_1; }

		//sensors+=AbstractSensor
		public Assignment getSensorsAssignment_8_2() { return cSensorsAssignment_8_2; }

		//AbstractSensor
		public RuleCall getSensorsAbstractSensorParserRuleCall_8_2_0() { return cSensorsAbstractSensorParserRuleCall_8_2_0; }

		//("," sensors+=AbstractSensor)*
		public Group getGroup_8_3() { return cGroup_8_3; }

		//","
		public Keyword getCommaKeyword_8_3_0() { return cCommaKeyword_8_3_0; }

		//sensors+=AbstractSensor
		public Assignment getSensorsAssignment_8_3_1() { return cSensorsAssignment_8_3_1; }

		//AbstractSensor
		public RuleCall getSensorsAbstractSensorParserRuleCall_8_3_1_0() { return cSensorsAbstractSensorParserRuleCall_8_3_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_8_4() { return cRightCurlyBracketKeyword_8_4; }

		//("ports" "{" ports+=AbstractPort ("," ports+=AbstractPort)* "}")?
		public Group getGroup_9() { return cGroup_9; }

		//"ports"
		public Keyword getPortsKeyword_9_0() { return cPortsKeyword_9_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_9_1() { return cLeftCurlyBracketKeyword_9_1; }

		//ports+=AbstractPort
		public Assignment getPortsAssignment_9_2() { return cPortsAssignment_9_2; }

		//AbstractPort
		public RuleCall getPortsAbstractPortParserRuleCall_9_2_0() { return cPortsAbstractPortParserRuleCall_9_2_0; }

		//("," ports+=AbstractPort)*
		public Group getGroup_9_3() { return cGroup_9_3; }

		//","
		public Keyword getCommaKeyword_9_3_0() { return cCommaKeyword_9_3_0; }

		//ports+=AbstractPort
		public Assignment getPortsAssignment_9_3_1() { return cPortsAssignment_9_3_1; }

		//AbstractPort
		public RuleCall getPortsAbstractPortParserRuleCall_9_3_1_0() { return cPortsAbstractPortParserRuleCall_9_3_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_9_4() { return cRightCurlyBracketKeyword_9_4; }

		//("nodes" "{" nodes+=AbstractFlatNode ("," nodes+=AbstractFlatNode)* "}")?
		public Group getGroup_10() { return cGroup_10; }

		//"nodes"
		public Keyword getNodesKeyword_10_0() { return cNodesKeyword_10_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_10_1() { return cLeftCurlyBracketKeyword_10_1; }

		//nodes+=AbstractFlatNode
		public Assignment getNodesAssignment_10_2() { return cNodesAssignment_10_2; }

		//AbstractFlatNode
		public RuleCall getNodesAbstractFlatNodeParserRuleCall_10_2_0() { return cNodesAbstractFlatNodeParserRuleCall_10_2_0; }

		//("," nodes+=AbstractFlatNode)*
		public Group getGroup_10_3() { return cGroup_10_3; }

		//","
		public Keyword getCommaKeyword_10_3_0() { return cCommaKeyword_10_3_0; }

		//nodes+=AbstractFlatNode
		public Assignment getNodesAssignment_10_3_1() { return cNodesAssignment_10_3_1; }

		//AbstractFlatNode
		public RuleCall getNodesAbstractFlatNodeParserRuleCall_10_3_1_0() { return cNodesAbstractFlatNodeParserRuleCall_10_3_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_10_4() { return cRightCurlyBracketKeyword_10_4; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
	}

	public class ClusteredNetworkElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ClusteredNetwork");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cClusteredNetworkAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cClusteredNetworkKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cIdKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cIdAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cIdEIntParserRuleCall_3_1_0 = (RuleCall)cIdAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cNbOfNodesKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cNbOfNodesAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cNbOfNodesEIntParserRuleCall_4_1_0 = (RuleCall)cNbOfNodesAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cInterNodeCommKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cInterNodeCommAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cInterNodeCommInterNodeCommEnumRuleCall_5_1_0 = (RuleCall)cInterNodeCommAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cRoutingProtocolKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cRoutingProtocolAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cRoutingProtocolRoutingProtocolEnumRuleCall_6_1_0 = (RuleCall)cRoutingProtocolAssignment_6_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cSinkKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cSinkAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final CrossReference cSinkSinkNodeCrossReference_7_1_0 = (CrossReference)cSinkAssignment_7_1.eContents().get(0);
		private final RuleCall cSinkSinkNodeEStringParserRuleCall_7_1_0_1 = (RuleCall)cSinkSinkNodeCrossReference_7_1_0.eContents().get(1);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cSensorsKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_8_1 = (Keyword)cGroup_8.eContents().get(1);
		private final Assignment cSensorsAssignment_8_2 = (Assignment)cGroup_8.eContents().get(2);
		private final RuleCall cSensorsAbstractSensorParserRuleCall_8_2_0 = (RuleCall)cSensorsAssignment_8_2.eContents().get(0);
		private final Group cGroup_8_3 = (Group)cGroup_8.eContents().get(3);
		private final Keyword cCommaKeyword_8_3_0 = (Keyword)cGroup_8_3.eContents().get(0);
		private final Assignment cSensorsAssignment_8_3_1 = (Assignment)cGroup_8_3.eContents().get(1);
		private final RuleCall cSensorsAbstractSensorParserRuleCall_8_3_1_0 = (RuleCall)cSensorsAssignment_8_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8_4 = (Keyword)cGroup_8.eContents().get(4);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cPortsKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_9_1 = (Keyword)cGroup_9.eContents().get(1);
		private final Assignment cPortsAssignment_9_2 = (Assignment)cGroup_9.eContents().get(2);
		private final RuleCall cPortsAbstractPortParserRuleCall_9_2_0 = (RuleCall)cPortsAssignment_9_2.eContents().get(0);
		private final Group cGroup_9_3 = (Group)cGroup_9.eContents().get(3);
		private final Keyword cCommaKeyword_9_3_0 = (Keyword)cGroup_9_3.eContents().get(0);
		private final Assignment cPortsAssignment_9_3_1 = (Assignment)cGroup_9_3.eContents().get(1);
		private final RuleCall cPortsAbstractPortParserRuleCall_9_3_1_0 = (RuleCall)cPortsAssignment_9_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9_4 = (Keyword)cGroup_9.eContents().get(4);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cClustersKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_10_1 = (Keyword)cGroup_10.eContents().get(1);
		private final Assignment cClustersAssignment_10_2 = (Assignment)cGroup_10.eContents().get(2);
		private final RuleCall cClustersClusterParserRuleCall_10_2_0 = (RuleCall)cClustersAssignment_10_2.eContents().get(0);
		private final Group cGroup_10_3 = (Group)cGroup_10.eContents().get(3);
		private final Keyword cCommaKeyword_10_3_0 = (Keyword)cGroup_10_3.eContents().get(0);
		private final Assignment cClustersAssignment_10_3_1 = (Assignment)cGroup_10_3.eContents().get(1);
		private final RuleCall cClustersClusterParserRuleCall_10_3_1_0 = (RuleCall)cClustersAssignment_10_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_10_4 = (Keyword)cGroup_10.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		//ClusteredNetwork returns network::ClusteredNetwork:
		//	{network::ClusteredNetwork} "ClusteredNetwork" "{" ("id" id=EInt)? ("nbOfNodes" nbOfNodes=EInt)? ("interNodeComm"
		//	interNodeComm=InterNodeComm)? ("routingProtocol" routingProtocol=RoutingProtocol)? ("sink"
		//	sink=[node::SinkNode|EString])? ("sensors" "{" sensors+=AbstractSensor ("," sensors+=AbstractSensor)* "}")? ("ports"
		//	"{" ports+=AbstractPort ("," ports+=AbstractPort)* "}")? ("clusters" "{" clusters+=Cluster ("," clusters+=Cluster)*
		//	"}")? "}";
		public ParserRule getRule() { return rule; }

		//{network::ClusteredNetwork} "ClusteredNetwork" "{" ("id" id=EInt)? ("nbOfNodes" nbOfNodes=EInt)? ("interNodeComm"
		//interNodeComm=InterNodeComm)? ("routingProtocol" routingProtocol=RoutingProtocol)? ("sink"
		//sink=[node::SinkNode|EString])? ("sensors" "{" sensors+=AbstractSensor ("," sensors+=AbstractSensor)* "}")? ("ports"
		//"{" ports+=AbstractPort ("," ports+=AbstractPort)* "}")? ("clusters" "{" clusters+=Cluster ("," clusters+=Cluster)*
		//"}")? "}"
		public Group getGroup() { return cGroup; }

		//{network::ClusteredNetwork}
		public Action getClusteredNetworkAction_0() { return cClusteredNetworkAction_0; }

		//"ClusteredNetwork"
		public Keyword getClusteredNetworkKeyword_1() { return cClusteredNetworkKeyword_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//("id" id=EInt)?
		public Group getGroup_3() { return cGroup_3; }

		//"id"
		public Keyword getIdKeyword_3_0() { return cIdKeyword_3_0; }

		//id=EInt
		public Assignment getIdAssignment_3_1() { return cIdAssignment_3_1; }

		//EInt
		public RuleCall getIdEIntParserRuleCall_3_1_0() { return cIdEIntParserRuleCall_3_1_0; }

		//("nbOfNodes" nbOfNodes=EInt)?
		public Group getGroup_4() { return cGroup_4; }

		//"nbOfNodes"
		public Keyword getNbOfNodesKeyword_4_0() { return cNbOfNodesKeyword_4_0; }

		//nbOfNodes=EInt
		public Assignment getNbOfNodesAssignment_4_1() { return cNbOfNodesAssignment_4_1; }

		//EInt
		public RuleCall getNbOfNodesEIntParserRuleCall_4_1_0() { return cNbOfNodesEIntParserRuleCall_4_1_0; }

		//("interNodeComm" interNodeComm=InterNodeComm)?
		public Group getGroup_5() { return cGroup_5; }

		//"interNodeComm"
		public Keyword getInterNodeCommKeyword_5_0() { return cInterNodeCommKeyword_5_0; }

		//interNodeComm=InterNodeComm
		public Assignment getInterNodeCommAssignment_5_1() { return cInterNodeCommAssignment_5_1; }

		//InterNodeComm
		public RuleCall getInterNodeCommInterNodeCommEnumRuleCall_5_1_0() { return cInterNodeCommInterNodeCommEnumRuleCall_5_1_0; }

		//("routingProtocol" routingProtocol=RoutingProtocol)?
		public Group getGroup_6() { return cGroup_6; }

		//"routingProtocol"
		public Keyword getRoutingProtocolKeyword_6_0() { return cRoutingProtocolKeyword_6_0; }

		//routingProtocol=RoutingProtocol
		public Assignment getRoutingProtocolAssignment_6_1() { return cRoutingProtocolAssignment_6_1; }

		//RoutingProtocol
		public RuleCall getRoutingProtocolRoutingProtocolEnumRuleCall_6_1_0() { return cRoutingProtocolRoutingProtocolEnumRuleCall_6_1_0; }

		//("sink" sink=[node::SinkNode|EString])?
		public Group getGroup_7() { return cGroup_7; }

		//"sink"
		public Keyword getSinkKeyword_7_0() { return cSinkKeyword_7_0; }

		//sink=[node::SinkNode|EString]
		public Assignment getSinkAssignment_7_1() { return cSinkAssignment_7_1; }

		//[node::SinkNode|EString]
		public CrossReference getSinkSinkNodeCrossReference_7_1_0() { return cSinkSinkNodeCrossReference_7_1_0; }

		//EString
		public RuleCall getSinkSinkNodeEStringParserRuleCall_7_1_0_1() { return cSinkSinkNodeEStringParserRuleCall_7_1_0_1; }

		//("sensors" "{" sensors+=AbstractSensor ("," sensors+=AbstractSensor)* "}")?
		public Group getGroup_8() { return cGroup_8; }

		//"sensors"
		public Keyword getSensorsKeyword_8_0() { return cSensorsKeyword_8_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_8_1() { return cLeftCurlyBracketKeyword_8_1; }

		//sensors+=AbstractSensor
		public Assignment getSensorsAssignment_8_2() { return cSensorsAssignment_8_2; }

		//AbstractSensor
		public RuleCall getSensorsAbstractSensorParserRuleCall_8_2_0() { return cSensorsAbstractSensorParserRuleCall_8_2_0; }

		//("," sensors+=AbstractSensor)*
		public Group getGroup_8_3() { return cGroup_8_3; }

		//","
		public Keyword getCommaKeyword_8_3_0() { return cCommaKeyword_8_3_0; }

		//sensors+=AbstractSensor
		public Assignment getSensorsAssignment_8_3_1() { return cSensorsAssignment_8_3_1; }

		//AbstractSensor
		public RuleCall getSensorsAbstractSensorParserRuleCall_8_3_1_0() { return cSensorsAbstractSensorParserRuleCall_8_3_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_8_4() { return cRightCurlyBracketKeyword_8_4; }

		//("ports" "{" ports+=AbstractPort ("," ports+=AbstractPort)* "}")?
		public Group getGroup_9() { return cGroup_9; }

		//"ports"
		public Keyword getPortsKeyword_9_0() { return cPortsKeyword_9_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_9_1() { return cLeftCurlyBracketKeyword_9_1; }

		//ports+=AbstractPort
		public Assignment getPortsAssignment_9_2() { return cPortsAssignment_9_2; }

		//AbstractPort
		public RuleCall getPortsAbstractPortParserRuleCall_9_2_0() { return cPortsAbstractPortParserRuleCall_9_2_0; }

		//("," ports+=AbstractPort)*
		public Group getGroup_9_3() { return cGroup_9_3; }

		//","
		public Keyword getCommaKeyword_9_3_0() { return cCommaKeyword_9_3_0; }

		//ports+=AbstractPort
		public Assignment getPortsAssignment_9_3_1() { return cPortsAssignment_9_3_1; }

		//AbstractPort
		public RuleCall getPortsAbstractPortParserRuleCall_9_3_1_0() { return cPortsAbstractPortParserRuleCall_9_3_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_9_4() { return cRightCurlyBracketKeyword_9_4; }

		//("clusters" "{" clusters+=Cluster ("," clusters+=Cluster)* "}")?
		public Group getGroup_10() { return cGroup_10; }

		//"clusters"
		public Keyword getClustersKeyword_10_0() { return cClustersKeyword_10_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_10_1() { return cLeftCurlyBracketKeyword_10_1; }

		//clusters+=Cluster
		public Assignment getClustersAssignment_10_2() { return cClustersAssignment_10_2; }

		//Cluster
		public RuleCall getClustersClusterParserRuleCall_10_2_0() { return cClustersClusterParserRuleCall_10_2_0; }

		//("," clusters+=Cluster)*
		public Group getGroup_10_3() { return cGroup_10_3; }

		//","
		public Keyword getCommaKeyword_10_3_0() { return cCommaKeyword_10_3_0; }

		//clusters+=Cluster
		public Assignment getClustersAssignment_10_3_1() { return cClustersAssignment_10_3_1; }

		//Cluster
		public RuleCall getClustersClusterParserRuleCall_10_3_1_0() { return cClustersClusterParserRuleCall_10_3_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_10_4() { return cRightCurlyBracketKeyword_10_4; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
	}

	public class AccelerometerSensorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AccelerometerSensor");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cAccelerometerSensorAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cAccelerometerSensorKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//AccelerometerSensor returns sensor::AccelerometerSensor:
		//	{sensor::AccelerometerSensor} "AccelerometerSensor";
		public ParserRule getRule() { return rule; }

		//{sensor::AccelerometerSensor} "AccelerometerSensor"
		public Group getGroup() { return cGroup; }

		//{sensor::AccelerometerSensor}
		public Action getAccelerometerSensorAction_0() { return cAccelerometerSensorAction_0; }

		//"AccelerometerSensor"
		public Keyword getAccelerometerSensorKeyword_1() { return cAccelerometerSensorKeyword_1; }
	}

	public class LightSensorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "LightSensor");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cLightSensorAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLightSensorKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//LightSensor returns sensor::LightSensor:
		//	{sensor::LightSensor} "LightSensor";
		public ParserRule getRule() { return rule; }

		//{sensor::LightSensor} "LightSensor"
		public Group getGroup() { return cGroup; }

		//{sensor::LightSensor}
		public Action getLightSensorAction_0() { return cLightSensorAction_0; }

		//"LightSensor"
		public Keyword getLightSensorKeyword_1() { return cLightSensorKeyword_1; }
	}

	public class LocationSensorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "LocationSensor");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cLocationSensorAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLocationSensorKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//LocationSensor returns sensor::LocationSensor:
		//	{sensor::LocationSensor} "LocationSensor";
		public ParserRule getRule() { return rule; }

		//{sensor::LocationSensor} "LocationSensor"
		public Group getGroup() { return cGroup; }

		//{sensor::LocationSensor}
		public Action getLocationSensorAction_0() { return cLocationSensorAction_0; }

		//"LocationSensor"
		public Keyword getLocationSensorKeyword_1() { return cLocationSensorKeyword_1; }
	}

	public class MicrophoneSensorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MicrophoneSensor");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMicrophoneSensorAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cMicrophoneSensorKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//MicrophoneSensor returns sensor::MicrophoneSensor:
		//	{sensor::MicrophoneSensor} "MicrophoneSensor";
		public ParserRule getRule() { return rule; }

		//{sensor::MicrophoneSensor} "MicrophoneSensor"
		public Group getGroup() { return cGroup; }

		//{sensor::MicrophoneSensor}
		public Action getMicrophoneSensorAction_0() { return cMicrophoneSensorAction_0; }

		//"MicrophoneSensor"
		public Keyword getMicrophoneSensorKeyword_1() { return cMicrophoneSensorKeyword_1; }
	}

	public class TemperatureSensorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TemperatureSensor");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTemperatureSensorAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cTemperatureSensorKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//TemperatureSensor returns sensor::TemperatureSensor:
		//	{sensor::TemperatureSensor} "TemperatureSensor";
		public ParserRule getRule() { return rule; }

		//{sensor::TemperatureSensor} "TemperatureSensor"
		public Group getGroup() { return cGroup; }

		//{sensor::TemperatureSensor}
		public Action getTemperatureSensorAction_0() { return cTemperatureSensorAction_0; }

		//"TemperatureSensor"
		public Keyword getTemperatureSensorKeyword_1() { return cTemperatureSensorKeyword_1; }
	}

	public class PressureSensorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PressureSensor");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cPressureSensorAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cPressureSensorKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//PressureSensor returns sensor::PressureSensor:
		//	{sensor::PressureSensor} "PressureSensor";
		public ParserRule getRule() { return rule; }

		//{sensor::PressureSensor} "PressureSensor"
		public Group getGroup() { return cGroup; }

		//{sensor::PressureSensor}
		public Action getPressureSensorAction_0() { return cPressureSensorAction_0; }

		//"PressureSensor"
		public Keyword getPressureSensorKeyword_1() { return cPressureSensorKeyword_1; }
	}

	public class HumiditySensorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "HumiditySensor");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cHumiditySensorAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cHumiditySensorKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//HumiditySensor returns sensor::HumiditySensor:
		//	{sensor::HumiditySensor} "HumiditySensor";
		public ParserRule getRule() { return rule; }

		//{sensor::HumiditySensor} "HumiditySensor"
		public Group getGroup() { return cGroup; }

		//{sensor::HumiditySensor}
		public Action getHumiditySensorAction_0() { return cHumiditySensorAction_0; }

		//"HumiditySensor"
		public Keyword getHumiditySensorKeyword_1() { return cHumiditySensorKeyword_1; }
	}

	public class ChemicalSensorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ChemicalSensor");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cChemicalSensorAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cChemicalSensorKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//ChemicalSensor returns sensor::ChemicalSensor:
		//	{sensor::ChemicalSensor} "ChemicalSensor";
		public ParserRule getRule() { return rule; }

		//{sensor::ChemicalSensor} "ChemicalSensor"
		public Group getGroup() { return cGroup; }

		//{sensor::ChemicalSensor}
		public Action getChemicalSensorAction_0() { return cChemicalSensorAction_0; }

		//"ChemicalSensor"
		public Keyword getChemicalSensorKeyword_1() { return cChemicalSensorKeyword_1; }
	}

	public class UsbPortElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UsbPort");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cUsbPortAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cUsbPortKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//UsbPort returns port::UsbPort:
		//	{port::UsbPort} "UsbPort";
		public ParserRule getRule() { return rule; }

		//{port::UsbPort} "UsbPort"
		public Group getGroup() { return cGroup; }

		//{port::UsbPort}
		public Action getUsbPortAction_0() { return cUsbPortAction_0; }

		//"UsbPort"
		public Keyword getUsbPortKeyword_1() { return cUsbPortKeyword_1; }
	}

	public class SerialPortElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SerialPort");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSerialPortAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cSerialPortKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//SerialPort returns port::SerialPort:
		//	{port::SerialPort} "SerialPort";
		public ParserRule getRule() { return rule; }

		//{port::SerialPort} "SerialPort"
		public Group getGroup() { return cGroup; }

		//{port::SerialPort}
		public Action getSerialPortAction_0() { return cSerialPortAction_0; }

		//"SerialPort"
		public Keyword getSerialPortKeyword_1() { return cSerialPortKeyword_1; }
	}

	public class OutPort_ImplElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "OutPort_Impl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cOutPortAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cOutPortKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//OutPort_Impl returns port::OutPort:
		//	{port::OutPort} "OutPort";
		public ParserRule getRule() { return rule; }

		//{port::OutPort} "OutPort"
		public Group getGroup() { return cGroup; }

		//{port::OutPort}
		public Action getOutPortAction_0() { return cOutPortAction_0; }

		//"OutPort"
		public Keyword getOutPortKeyword_1() { return cOutPortKeyword_1; }
	}

	public class InPort_ImplElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "InPort_Impl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cInPortAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cInPortKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//InPort_Impl returns port::InPort:
		//	{port::InPort} "InPort";
		public ParserRule getRule() { return rule; }

		//{port::InPort} "InPort"
		public Group getGroup() { return cGroup; }

		//{port::InPort}
		public Action getInPortAction_0() { return cInPortAction_0; }

		//"InPort"
		public Keyword getInPortKeyword_1() { return cInPortKeyword_1; }
	}

	public class TransmitterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Transmitter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTransmitterAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cTransmitterKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//Transmitter returns port::Transmitter:
		//	{port::Transmitter} "Transmitter";
		public ParserRule getRule() { return rule; }

		//{port::Transmitter} "Transmitter"
		public Group getGroup() { return cGroup; }

		//{port::Transmitter}
		public Action getTransmitterAction_0() { return cTransmitterAction_0; }

		//"Transmitter"
		public Keyword getTransmitterKeyword_1() { return cTransmitterKeyword_1; }
	}

	public class RecieverElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Reciever");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cRecieverAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cRecieverKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//Reciever returns port::Reciever:
		//	{port::Reciever} "Reciever";
		public ParserRule getRule() { return rule; }

		//{port::Reciever} "Reciever"
		public Group getGroup() { return cGroup; }

		//{port::Reciever}
		public Action getRecieverAction_0() { return cRecieverAction_0; }

		//"Reciever"
		public Keyword getRecieverKeyword_1() { return cRecieverKeyword_1; }
	}

	public class SensorNodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SensorNode");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSensorNodeAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cSensorNodeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cIdKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cIdAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cIdEIntParserRuleCall_3_1_0 = (RuleCall)cIdAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cPositionKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cPositionAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cPositionPositionEnumRuleCall_4_1_0 = (RuleCall)cPositionAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cPortsKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cPortsAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final CrossReference cPortsAbstractPortCrossReference_5_2_0 = (CrossReference)cPortsAssignment_5_2.eContents().get(0);
		private final RuleCall cPortsAbstractPortEStringParserRuleCall_5_2_0_1 = (RuleCall)cPortsAbstractPortCrossReference_5_2_0.eContents().get(1);
		private final Group cGroup_5_3 = (Group)cGroup_5.eContents().get(3);
		private final Keyword cCommaKeyword_5_3_0 = (Keyword)cGroup_5_3.eContents().get(0);
		private final Assignment cPortsAssignment_5_3_1 = (Assignment)cGroup_5_3.eContents().get(1);
		private final CrossReference cPortsAbstractPortCrossReference_5_3_1_0 = (CrossReference)cPortsAssignment_5_3_1.eContents().get(0);
		private final RuleCall cPortsAbstractPortEStringParserRuleCall_5_3_1_0_1 = (RuleCall)cPortsAbstractPortCrossReference_5_3_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_5_4 = (Keyword)cGroup_5.eContents().get(4);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cSensorsKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cSensorsAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final CrossReference cSensorsAbstractSensorCrossReference_6_2_0 = (CrossReference)cSensorsAssignment_6_2.eContents().get(0);
		private final RuleCall cSensorsAbstractSensorEStringParserRuleCall_6_2_0_1 = (RuleCall)cSensorsAbstractSensorCrossReference_6_2_0.eContents().get(1);
		private final Group cGroup_6_3 = (Group)cGroup_6.eContents().get(3);
		private final Keyword cCommaKeyword_6_3_0 = (Keyword)cGroup_6_3.eContents().get(0);
		private final Assignment cSensorsAssignment_6_3_1 = (Assignment)cGroup_6_3.eContents().get(1);
		private final CrossReference cSensorsAbstractSensorCrossReference_6_3_1_0 = (CrossReference)cSensorsAssignment_6_3_1.eContents().get(0);
		private final RuleCall cSensorsAbstractSensorEStringParserRuleCall_6_3_1_0_1 = (RuleCall)cSensorsAbstractSensorCrossReference_6_3_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_6_4 = (Keyword)cGroup_6.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//SensorNode returns node::SensorNode:
		//	{node::SensorNode} "SensorNode" "{" ("id" id=EInt)? ("position" position=Position)? ("ports" "("
		//	ports+=[port::AbstractPort|EString] ("," ports+=[port::AbstractPort|EString])* ")")? ("sensors" "("
		//	sensors+=[sensor::AbstractSensor|EString] ("," sensors+=[sensor::AbstractSensor|EString])* ")")? "}";
		public ParserRule getRule() { return rule; }

		//{node::SensorNode} "SensorNode" "{" ("id" id=EInt)? ("position" position=Position)? ("ports" "("
		//ports+=[port::AbstractPort|EString] ("," ports+=[port::AbstractPort|EString])* ")")? ("sensors" "("
		//sensors+=[sensor::AbstractSensor|EString] ("," sensors+=[sensor::AbstractSensor|EString])* ")")? "}"
		public Group getGroup() { return cGroup; }

		//{node::SensorNode}
		public Action getSensorNodeAction_0() { return cSensorNodeAction_0; }

		//"SensorNode"
		public Keyword getSensorNodeKeyword_1() { return cSensorNodeKeyword_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//("id" id=EInt)?
		public Group getGroup_3() { return cGroup_3; }

		//"id"
		public Keyword getIdKeyword_3_0() { return cIdKeyword_3_0; }

		//id=EInt
		public Assignment getIdAssignment_3_1() { return cIdAssignment_3_1; }

		//EInt
		public RuleCall getIdEIntParserRuleCall_3_1_0() { return cIdEIntParserRuleCall_3_1_0; }

		//("position" position=Position)?
		public Group getGroup_4() { return cGroup_4; }

		//"position"
		public Keyword getPositionKeyword_4_0() { return cPositionKeyword_4_0; }

		//position=Position
		public Assignment getPositionAssignment_4_1() { return cPositionAssignment_4_1; }

		//Position
		public RuleCall getPositionPositionEnumRuleCall_4_1_0() { return cPositionPositionEnumRuleCall_4_1_0; }

		//("ports" "(" ports+=[port::AbstractPort|EString] ("," ports+=[port::AbstractPort|EString])* ")")?
		public Group getGroup_5() { return cGroup_5; }

		//"ports"
		public Keyword getPortsKeyword_5_0() { return cPortsKeyword_5_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_5_1() { return cLeftParenthesisKeyword_5_1; }

		//ports+=[port::AbstractPort|EString]
		public Assignment getPortsAssignment_5_2() { return cPortsAssignment_5_2; }

		//[port::AbstractPort|EString]
		public CrossReference getPortsAbstractPortCrossReference_5_2_0() { return cPortsAbstractPortCrossReference_5_2_0; }

		//EString
		public RuleCall getPortsAbstractPortEStringParserRuleCall_5_2_0_1() { return cPortsAbstractPortEStringParserRuleCall_5_2_0_1; }

		//("," ports+=[port::AbstractPort|EString])*
		public Group getGroup_5_3() { return cGroup_5_3; }

		//","
		public Keyword getCommaKeyword_5_3_0() { return cCommaKeyword_5_3_0; }

		//ports+=[port::AbstractPort|EString]
		public Assignment getPortsAssignment_5_3_1() { return cPortsAssignment_5_3_1; }

		//[port::AbstractPort|EString]
		public CrossReference getPortsAbstractPortCrossReference_5_3_1_0() { return cPortsAbstractPortCrossReference_5_3_1_0; }

		//EString
		public RuleCall getPortsAbstractPortEStringParserRuleCall_5_3_1_0_1() { return cPortsAbstractPortEStringParserRuleCall_5_3_1_0_1; }

		//")"
		public Keyword getRightParenthesisKeyword_5_4() { return cRightParenthesisKeyword_5_4; }

		//("sensors" "(" sensors+=[sensor::AbstractSensor|EString] ("," sensors+=[sensor::AbstractSensor|EString])* ")")?
		public Group getGroup_6() { return cGroup_6; }

		//"sensors"
		public Keyword getSensorsKeyword_6_0() { return cSensorsKeyword_6_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_6_1() { return cLeftParenthesisKeyword_6_1; }

		//sensors+=[sensor::AbstractSensor|EString]
		public Assignment getSensorsAssignment_6_2() { return cSensorsAssignment_6_2; }

		//[sensor::AbstractSensor|EString]
		public CrossReference getSensorsAbstractSensorCrossReference_6_2_0() { return cSensorsAbstractSensorCrossReference_6_2_0; }

		//EString
		public RuleCall getSensorsAbstractSensorEStringParserRuleCall_6_2_0_1() { return cSensorsAbstractSensorEStringParserRuleCall_6_2_0_1; }

		//("," sensors+=[sensor::AbstractSensor|EString])*
		public Group getGroup_6_3() { return cGroup_6_3; }

		//","
		public Keyword getCommaKeyword_6_3_0() { return cCommaKeyword_6_3_0; }

		//sensors+=[sensor::AbstractSensor|EString]
		public Assignment getSensorsAssignment_6_3_1() { return cSensorsAssignment_6_3_1; }

		//[sensor::AbstractSensor|EString]
		public CrossReference getSensorsAbstractSensorCrossReference_6_3_1_0() { return cSensorsAbstractSensorCrossReference_6_3_1_0; }

		//EString
		public RuleCall getSensorsAbstractSensorEStringParserRuleCall_6_3_1_0_1() { return cSensorsAbstractSensorEStringParserRuleCall_6_3_1_0_1; }

		//")"
		public Keyword getRightParenthesisKeyword_6_4() { return cRightParenthesisKeyword_6_4; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}

	public class ComputationNodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ComputationNode");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cComputationNodeAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cComputationNodeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cIdKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cIdAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cIdEIntParserRuleCall_3_1_0 = (RuleCall)cIdAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cPositionKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cPositionAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cPositionPositionEnumRuleCall_4_1_0 = (RuleCall)cPositionAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cPortsKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cPortsAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final CrossReference cPortsAbstractPortCrossReference_5_2_0 = (CrossReference)cPortsAssignment_5_2.eContents().get(0);
		private final RuleCall cPortsAbstractPortEStringParserRuleCall_5_2_0_1 = (RuleCall)cPortsAbstractPortCrossReference_5_2_0.eContents().get(1);
		private final Group cGroup_5_3 = (Group)cGroup_5.eContents().get(3);
		private final Keyword cCommaKeyword_5_3_0 = (Keyword)cGroup_5_3.eContents().get(0);
		private final Assignment cPortsAssignment_5_3_1 = (Assignment)cGroup_5_3.eContents().get(1);
		private final CrossReference cPortsAbstractPortCrossReference_5_3_1_0 = (CrossReference)cPortsAssignment_5_3_1.eContents().get(0);
		private final RuleCall cPortsAbstractPortEStringParserRuleCall_5_3_1_0_1 = (RuleCall)cPortsAbstractPortCrossReference_5_3_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_5_4 = (Keyword)cGroup_5.eContents().get(4);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cSensorsKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cSensorsAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final CrossReference cSensorsAbstractSensorCrossReference_6_2_0 = (CrossReference)cSensorsAssignment_6_2.eContents().get(0);
		private final RuleCall cSensorsAbstractSensorEStringParserRuleCall_6_2_0_1 = (RuleCall)cSensorsAbstractSensorCrossReference_6_2_0.eContents().get(1);
		private final Group cGroup_6_3 = (Group)cGroup_6.eContents().get(3);
		private final Keyword cCommaKeyword_6_3_0 = (Keyword)cGroup_6_3.eContents().get(0);
		private final Assignment cSensorsAssignment_6_3_1 = (Assignment)cGroup_6_3.eContents().get(1);
		private final CrossReference cSensorsAbstractSensorCrossReference_6_3_1_0 = (CrossReference)cSensorsAssignment_6_3_1.eContents().get(0);
		private final RuleCall cSensorsAbstractSensorEStringParserRuleCall_6_3_1_0_1 = (RuleCall)cSensorsAbstractSensorCrossReference_6_3_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_6_4 = (Keyword)cGroup_6.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//ComputationNode returns node::ComputationNode:
		//	{node::ComputationNode} "ComputationNode" "{" ("id" id=EInt)? ("position" position=Position)? ("ports" "("
		//	ports+=[port::AbstractPort|EString] ("," ports+=[port::AbstractPort|EString])* ")")? ("sensors" "("
		//	sensors+=[sensor::AbstractSensor|EString] ("," sensors+=[sensor::AbstractSensor|EString])* ")")? "}";
		public ParserRule getRule() { return rule; }

		//{node::ComputationNode} "ComputationNode" "{" ("id" id=EInt)? ("position" position=Position)? ("ports" "("
		//ports+=[port::AbstractPort|EString] ("," ports+=[port::AbstractPort|EString])* ")")? ("sensors" "("
		//sensors+=[sensor::AbstractSensor|EString] ("," sensors+=[sensor::AbstractSensor|EString])* ")")? "}"
		public Group getGroup() { return cGroup; }

		//{node::ComputationNode}
		public Action getComputationNodeAction_0() { return cComputationNodeAction_0; }

		//"ComputationNode"
		public Keyword getComputationNodeKeyword_1() { return cComputationNodeKeyword_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//("id" id=EInt)?
		public Group getGroup_3() { return cGroup_3; }

		//"id"
		public Keyword getIdKeyword_3_0() { return cIdKeyword_3_0; }

		//id=EInt
		public Assignment getIdAssignment_3_1() { return cIdAssignment_3_1; }

		//EInt
		public RuleCall getIdEIntParserRuleCall_3_1_0() { return cIdEIntParserRuleCall_3_1_0; }

		//("position" position=Position)?
		public Group getGroup_4() { return cGroup_4; }

		//"position"
		public Keyword getPositionKeyword_4_0() { return cPositionKeyword_4_0; }

		//position=Position
		public Assignment getPositionAssignment_4_1() { return cPositionAssignment_4_1; }

		//Position
		public RuleCall getPositionPositionEnumRuleCall_4_1_0() { return cPositionPositionEnumRuleCall_4_1_0; }

		//("ports" "(" ports+=[port::AbstractPort|EString] ("," ports+=[port::AbstractPort|EString])* ")")?
		public Group getGroup_5() { return cGroup_5; }

		//"ports"
		public Keyword getPortsKeyword_5_0() { return cPortsKeyword_5_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_5_1() { return cLeftParenthesisKeyword_5_1; }

		//ports+=[port::AbstractPort|EString]
		public Assignment getPortsAssignment_5_2() { return cPortsAssignment_5_2; }

		//[port::AbstractPort|EString]
		public CrossReference getPortsAbstractPortCrossReference_5_2_0() { return cPortsAbstractPortCrossReference_5_2_0; }

		//EString
		public RuleCall getPortsAbstractPortEStringParserRuleCall_5_2_0_1() { return cPortsAbstractPortEStringParserRuleCall_5_2_0_1; }

		//("," ports+=[port::AbstractPort|EString])*
		public Group getGroup_5_3() { return cGroup_5_3; }

		//","
		public Keyword getCommaKeyword_5_3_0() { return cCommaKeyword_5_3_0; }

		//ports+=[port::AbstractPort|EString]
		public Assignment getPortsAssignment_5_3_1() { return cPortsAssignment_5_3_1; }

		//[port::AbstractPort|EString]
		public CrossReference getPortsAbstractPortCrossReference_5_3_1_0() { return cPortsAbstractPortCrossReference_5_3_1_0; }

		//EString
		public RuleCall getPortsAbstractPortEStringParserRuleCall_5_3_1_0_1() { return cPortsAbstractPortEStringParserRuleCall_5_3_1_0_1; }

		//")"
		public Keyword getRightParenthesisKeyword_5_4() { return cRightParenthesisKeyword_5_4; }

		//("sensors" "(" sensors+=[sensor::AbstractSensor|EString] ("," sensors+=[sensor::AbstractSensor|EString])* ")")?
		public Group getGroup_6() { return cGroup_6; }

		//"sensors"
		public Keyword getSensorsKeyword_6_0() { return cSensorsKeyword_6_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_6_1() { return cLeftParenthesisKeyword_6_1; }

		//sensors+=[sensor::AbstractSensor|EString]
		public Assignment getSensorsAssignment_6_2() { return cSensorsAssignment_6_2; }

		//[sensor::AbstractSensor|EString]
		public CrossReference getSensorsAbstractSensorCrossReference_6_2_0() { return cSensorsAbstractSensorCrossReference_6_2_0; }

		//EString
		public RuleCall getSensorsAbstractSensorEStringParserRuleCall_6_2_0_1() { return cSensorsAbstractSensorEStringParserRuleCall_6_2_0_1; }

		//("," sensors+=[sensor::AbstractSensor|EString])*
		public Group getGroup_6_3() { return cGroup_6_3; }

		//","
		public Keyword getCommaKeyword_6_3_0() { return cCommaKeyword_6_3_0; }

		//sensors+=[sensor::AbstractSensor|EString]
		public Assignment getSensorsAssignment_6_3_1() { return cSensorsAssignment_6_3_1; }

		//[sensor::AbstractSensor|EString]
		public CrossReference getSensorsAbstractSensorCrossReference_6_3_1_0() { return cSensorsAbstractSensorCrossReference_6_3_1_0; }

		//EString
		public RuleCall getSensorsAbstractSensorEStringParserRuleCall_6_3_1_0_1() { return cSensorsAbstractSensorEStringParserRuleCall_6_3_1_0_1; }

		//")"
		public Keyword getRightParenthesisKeyword_6_4() { return cRightParenthesisKeyword_6_4; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}

	public class ClusterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Cluster");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cClusterAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cClusterKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cIdKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cIdAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cIdEIntParserRuleCall_3_1_0 = (RuleCall)cIdAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cResourcesKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cResourcesAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final CrossReference cResourcesAbstractResourceCrossReference_4_2_0 = (CrossReference)cResourcesAssignment_4_2.eContents().get(0);
		private final RuleCall cResourcesAbstractResourceEStringParserRuleCall_4_2_0_1 = (RuleCall)cResourcesAbstractResourceCrossReference_4_2_0.eContents().get(1);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cResourcesAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final CrossReference cResourcesAbstractResourceCrossReference_4_3_1_0 = (CrossReference)cResourcesAssignment_4_3_1.eContents().get(0);
		private final RuleCall cResourcesAbstractResourceEStringParserRuleCall_4_3_1_0_1 = (RuleCall)cResourcesAbstractResourceCrossReference_4_3_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cHeadKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cHeadAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cHeadClusterHeadNodeParserRuleCall_5_1_0 = (RuleCall)cHeadAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cNodesKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cNodesAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cNodesAbstractClusterNodeParserRuleCall_6_2_0 = (RuleCall)cNodesAssignment_6_2.eContents().get(0);
		private final Group cGroup_6_3 = (Group)cGroup_6.eContents().get(3);
		private final Keyword cCommaKeyword_6_3_0 = (Keyword)cGroup_6_3.eContents().get(0);
		private final Assignment cNodesAssignment_6_3_1 = (Assignment)cGroup_6_3.eContents().get(1);
		private final RuleCall cNodesAbstractClusterNodeParserRuleCall_6_3_1_0 = (RuleCall)cNodesAssignment_6_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6_4 = (Keyword)cGroup_6.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Cluster returns network::Cluster:
		//	{network::Cluster} "Cluster" "{" ("id" id=EInt)? ("resources" "("
		//	resources+=[toplevelstructure::AbstractResource|EString] (","
		//	resources+=[toplevelstructure::AbstractResource|EString])* ")")? ("head" head=ClusterHeadNode)? ("nodes" "{"
		//	nodes+=AbstractClusterNode ("," nodes+=AbstractClusterNode)* "}")? "}";
		public ParserRule getRule() { return rule; }

		//{network::Cluster} "Cluster" "{" ("id" id=EInt)? ("resources" "("
		//resources+=[toplevelstructure::AbstractResource|EString] (","
		//resources+=[toplevelstructure::AbstractResource|EString])* ")")? ("head" head=ClusterHeadNode)? ("nodes" "{"
		//nodes+=AbstractClusterNode ("," nodes+=AbstractClusterNode)* "}")? "}"
		public Group getGroup() { return cGroup; }

		//{network::Cluster}
		public Action getClusterAction_0() { return cClusterAction_0; }

		//"Cluster"
		public Keyword getClusterKeyword_1() { return cClusterKeyword_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//("id" id=EInt)?
		public Group getGroup_3() { return cGroup_3; }

		//"id"
		public Keyword getIdKeyword_3_0() { return cIdKeyword_3_0; }

		//id=EInt
		public Assignment getIdAssignment_3_1() { return cIdAssignment_3_1; }

		//EInt
		public RuleCall getIdEIntParserRuleCall_3_1_0() { return cIdEIntParserRuleCall_3_1_0; }

		//("resources" "(" resources+=[toplevelstructure::AbstractResource|EString] (","
		//resources+=[toplevelstructure::AbstractResource|EString])* ")")?
		public Group getGroup_4() { return cGroup_4; }

		//"resources"
		public Keyword getResourcesKeyword_4_0() { return cResourcesKeyword_4_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_4_1() { return cLeftParenthesisKeyword_4_1; }

		//resources+=[toplevelstructure::AbstractResource|EString]
		public Assignment getResourcesAssignment_4_2() { return cResourcesAssignment_4_2; }

		//[toplevelstructure::AbstractResource|EString]
		public CrossReference getResourcesAbstractResourceCrossReference_4_2_0() { return cResourcesAbstractResourceCrossReference_4_2_0; }

		//EString
		public RuleCall getResourcesAbstractResourceEStringParserRuleCall_4_2_0_1() { return cResourcesAbstractResourceEStringParserRuleCall_4_2_0_1; }

		//("," resources+=[toplevelstructure::AbstractResource|EString])*
		public Group getGroup_4_3() { return cGroup_4_3; }

		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }

		//resources+=[toplevelstructure::AbstractResource|EString]
		public Assignment getResourcesAssignment_4_3_1() { return cResourcesAssignment_4_3_1; }

		//[toplevelstructure::AbstractResource|EString]
		public CrossReference getResourcesAbstractResourceCrossReference_4_3_1_0() { return cResourcesAbstractResourceCrossReference_4_3_1_0; }

		//EString
		public RuleCall getResourcesAbstractResourceEStringParserRuleCall_4_3_1_0_1() { return cResourcesAbstractResourceEStringParserRuleCall_4_3_1_0_1; }

		//")"
		public Keyword getRightParenthesisKeyword_4_4() { return cRightParenthesisKeyword_4_4; }

		//("head" head=ClusterHeadNode)?
		public Group getGroup_5() { return cGroup_5; }

		//"head"
		public Keyword getHeadKeyword_5_0() { return cHeadKeyword_5_0; }

		//head=ClusterHeadNode
		public Assignment getHeadAssignment_5_1() { return cHeadAssignment_5_1; }

		//ClusterHeadNode
		public RuleCall getHeadClusterHeadNodeParserRuleCall_5_1_0() { return cHeadClusterHeadNodeParserRuleCall_5_1_0; }

		//("nodes" "{" nodes+=AbstractClusterNode ("," nodes+=AbstractClusterNode)* "}")?
		public Group getGroup_6() { return cGroup_6; }

		//"nodes"
		public Keyword getNodesKeyword_6_0() { return cNodesKeyword_6_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_6_1() { return cLeftCurlyBracketKeyword_6_1; }

		//nodes+=AbstractClusterNode
		public Assignment getNodesAssignment_6_2() { return cNodesAssignment_6_2; }

		//AbstractClusterNode
		public RuleCall getNodesAbstractClusterNodeParserRuleCall_6_2_0() { return cNodesAbstractClusterNodeParserRuleCall_6_2_0; }

		//("," nodes+=AbstractClusterNode)*
		public Group getGroup_6_3() { return cGroup_6_3; }

		//","
		public Keyword getCommaKeyword_6_3_0() { return cCommaKeyword_6_3_0; }

		//nodes+=AbstractClusterNode
		public Assignment getNodesAssignment_6_3_1() { return cNodesAssignment_6_3_1; }

		//AbstractClusterNode
		public RuleCall getNodesAbstractClusterNodeParserRuleCall_6_3_1_0() { return cNodesAbstractClusterNodeParserRuleCall_6_3_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6_4() { return cRightCurlyBracketKeyword_6_4; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}

	public class ClusterHeadNodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ClusterHeadNode");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cClusterHeadNodeAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cClusterHeadNodeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cIdKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cIdAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cIdEIntParserRuleCall_3_1_0 = (RuleCall)cIdAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cPositionKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cPositionAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cPositionPositionEnumRuleCall_4_1_0 = (RuleCall)cPositionAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cPortsKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cPortsAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final CrossReference cPortsAbstractPortCrossReference_5_2_0 = (CrossReference)cPortsAssignment_5_2.eContents().get(0);
		private final RuleCall cPortsAbstractPortEStringParserRuleCall_5_2_0_1 = (RuleCall)cPortsAbstractPortCrossReference_5_2_0.eContents().get(1);
		private final Group cGroup_5_3 = (Group)cGroup_5.eContents().get(3);
		private final Keyword cCommaKeyword_5_3_0 = (Keyword)cGroup_5_3.eContents().get(0);
		private final Assignment cPortsAssignment_5_3_1 = (Assignment)cGroup_5_3.eContents().get(1);
		private final CrossReference cPortsAbstractPortCrossReference_5_3_1_0 = (CrossReference)cPortsAssignment_5_3_1.eContents().get(0);
		private final RuleCall cPortsAbstractPortEStringParserRuleCall_5_3_1_0_1 = (RuleCall)cPortsAbstractPortCrossReference_5_3_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_5_4 = (Keyword)cGroup_5.eContents().get(4);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cSensorsKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cSensorsAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final CrossReference cSensorsAbstractSensorCrossReference_6_2_0 = (CrossReference)cSensorsAssignment_6_2.eContents().get(0);
		private final RuleCall cSensorsAbstractSensorEStringParserRuleCall_6_2_0_1 = (RuleCall)cSensorsAbstractSensorCrossReference_6_2_0.eContents().get(1);
		private final Group cGroup_6_3 = (Group)cGroup_6.eContents().get(3);
		private final Keyword cCommaKeyword_6_3_0 = (Keyword)cGroup_6_3.eContents().get(0);
		private final Assignment cSensorsAssignment_6_3_1 = (Assignment)cGroup_6_3.eContents().get(1);
		private final CrossReference cSensorsAbstractSensorCrossReference_6_3_1_0 = (CrossReference)cSensorsAssignment_6_3_1.eContents().get(0);
		private final RuleCall cSensorsAbstractSensorEStringParserRuleCall_6_3_1_0_1 = (RuleCall)cSensorsAbstractSensorCrossReference_6_3_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_6_4 = (Keyword)cGroup_6.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//ClusterHeadNode returns node::ClusterHeadNode:
		//	{node::ClusterHeadNode} "ClusterHeadNode" "{" ("id" id=EInt)? ("position" position=Position)? ("ports" "("
		//	ports+=[port::AbstractPort|EString] ("," ports+=[port::AbstractPort|EString])* ")")? ("sensors" "("
		//	sensors+=[sensor::AbstractSensor|EString] ("," sensors+=[sensor::AbstractSensor|EString])* ")")? "}";
		public ParserRule getRule() { return rule; }

		//{node::ClusterHeadNode} "ClusterHeadNode" "{" ("id" id=EInt)? ("position" position=Position)? ("ports" "("
		//ports+=[port::AbstractPort|EString] ("," ports+=[port::AbstractPort|EString])* ")")? ("sensors" "("
		//sensors+=[sensor::AbstractSensor|EString] ("," sensors+=[sensor::AbstractSensor|EString])* ")")? "}"
		public Group getGroup() { return cGroup; }

		//{node::ClusterHeadNode}
		public Action getClusterHeadNodeAction_0() { return cClusterHeadNodeAction_0; }

		//"ClusterHeadNode"
		public Keyword getClusterHeadNodeKeyword_1() { return cClusterHeadNodeKeyword_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//("id" id=EInt)?
		public Group getGroup_3() { return cGroup_3; }

		//"id"
		public Keyword getIdKeyword_3_0() { return cIdKeyword_3_0; }

		//id=EInt
		public Assignment getIdAssignment_3_1() { return cIdAssignment_3_1; }

		//EInt
		public RuleCall getIdEIntParserRuleCall_3_1_0() { return cIdEIntParserRuleCall_3_1_0; }

		//("position" position=Position)?
		public Group getGroup_4() { return cGroup_4; }

		//"position"
		public Keyword getPositionKeyword_4_0() { return cPositionKeyword_4_0; }

		//position=Position
		public Assignment getPositionAssignment_4_1() { return cPositionAssignment_4_1; }

		//Position
		public RuleCall getPositionPositionEnumRuleCall_4_1_0() { return cPositionPositionEnumRuleCall_4_1_0; }

		//("ports" "(" ports+=[port::AbstractPort|EString] ("," ports+=[port::AbstractPort|EString])* ")")?
		public Group getGroup_5() { return cGroup_5; }

		//"ports"
		public Keyword getPortsKeyword_5_0() { return cPortsKeyword_5_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_5_1() { return cLeftParenthesisKeyword_5_1; }

		//ports+=[port::AbstractPort|EString]
		public Assignment getPortsAssignment_5_2() { return cPortsAssignment_5_2; }

		//[port::AbstractPort|EString]
		public CrossReference getPortsAbstractPortCrossReference_5_2_0() { return cPortsAbstractPortCrossReference_5_2_0; }

		//EString
		public RuleCall getPortsAbstractPortEStringParserRuleCall_5_2_0_1() { return cPortsAbstractPortEStringParserRuleCall_5_2_0_1; }

		//("," ports+=[port::AbstractPort|EString])*
		public Group getGroup_5_3() { return cGroup_5_3; }

		//","
		public Keyword getCommaKeyword_5_3_0() { return cCommaKeyword_5_3_0; }

		//ports+=[port::AbstractPort|EString]
		public Assignment getPortsAssignment_5_3_1() { return cPortsAssignment_5_3_1; }

		//[port::AbstractPort|EString]
		public CrossReference getPortsAbstractPortCrossReference_5_3_1_0() { return cPortsAbstractPortCrossReference_5_3_1_0; }

		//EString
		public RuleCall getPortsAbstractPortEStringParserRuleCall_5_3_1_0_1() { return cPortsAbstractPortEStringParserRuleCall_5_3_1_0_1; }

		//")"
		public Keyword getRightParenthesisKeyword_5_4() { return cRightParenthesisKeyword_5_4; }

		//("sensors" "(" sensors+=[sensor::AbstractSensor|EString] ("," sensors+=[sensor::AbstractSensor|EString])* ")")?
		public Group getGroup_6() { return cGroup_6; }

		//"sensors"
		public Keyword getSensorsKeyword_6_0() { return cSensorsKeyword_6_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_6_1() { return cLeftParenthesisKeyword_6_1; }

		//sensors+=[sensor::AbstractSensor|EString]
		public Assignment getSensorsAssignment_6_2() { return cSensorsAssignment_6_2; }

		//[sensor::AbstractSensor|EString]
		public CrossReference getSensorsAbstractSensorCrossReference_6_2_0() { return cSensorsAbstractSensorCrossReference_6_2_0; }

		//EString
		public RuleCall getSensorsAbstractSensorEStringParserRuleCall_6_2_0_1() { return cSensorsAbstractSensorEStringParserRuleCall_6_2_0_1; }

		//("," sensors+=[sensor::AbstractSensor|EString])*
		public Group getGroup_6_3() { return cGroup_6_3; }

		//","
		public Keyword getCommaKeyword_6_3_0() { return cCommaKeyword_6_3_0; }

		//sensors+=[sensor::AbstractSensor|EString]
		public Assignment getSensorsAssignment_6_3_1() { return cSensorsAssignment_6_3_1; }

		//[sensor::AbstractSensor|EString]
		public CrossReference getSensorsAbstractSensorCrossReference_6_3_1_0() { return cSensorsAbstractSensorCrossReference_6_3_1_0; }

		//EString
		public RuleCall getSensorsAbstractSensorEStringParserRuleCall_6_3_1_0_1() { return cSensorsAbstractSensorEStringParserRuleCall_6_3_1_0_1; }

		//")"
		public Keyword getRightParenthesisKeyword_6_4() { return cRightParenthesisKeyword_6_4; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}

	public class ContinuousJobElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ContinuousJob");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cContinuousJobAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cContinuousJobKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cIdKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cIdAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cIdEIntParserRuleCall_3_1_0 = (RuleCall)cIdAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cActionKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cActionAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cActionAbstractJobActionParserRuleCall_4_1_0 = (RuleCall)cActionAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//ContinuousJob returns job::ContinuousJob:
		//	{job::ContinuousJob} "ContinuousJob" "{" ("id" id=EInt)? ("action" action=AbstractJobAction)? "}";
		public ParserRule getRule() { return rule; }

		//{job::ContinuousJob} "ContinuousJob" "{" ("id" id=EInt)? ("action" action=AbstractJobAction)? "}"
		public Group getGroup() { return cGroup; }

		//{job::ContinuousJob}
		public Action getContinuousJobAction_0() { return cContinuousJobAction_0; }

		//"ContinuousJob"
		public Keyword getContinuousJobKeyword_1() { return cContinuousJobKeyword_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//("id" id=EInt)?
		public Group getGroup_3() { return cGroup_3; }

		//"id"
		public Keyword getIdKeyword_3_0() { return cIdKeyword_3_0; }

		//id=EInt
		public Assignment getIdAssignment_3_1() { return cIdAssignment_3_1; }

		//EInt
		public RuleCall getIdEIntParserRuleCall_3_1_0() { return cIdEIntParserRuleCall_3_1_0; }

		//("action" action=AbstractJobAction)?
		public Group getGroup_4() { return cGroup_4; }

		//"action"
		public Keyword getActionKeyword_4_0() { return cActionKeyword_4_0; }

		//action=AbstractJobAction
		public Assignment getActionAssignment_4_1() { return cActionAssignment_4_1; }

		//AbstractJobAction
		public RuleCall getActionAbstractJobActionParserRuleCall_4_1_0() { return cActionAbstractJobActionParserRuleCall_4_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class EventDrivenJobElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EventDrivenJob");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEventDrivenJobAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cEventDrivenJobKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cIdKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cIdAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cIdEIntParserRuleCall_3_1_0 = (RuleCall)cIdAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cActionKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cActionAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cActionAbstractJobActionParserRuleCall_4_1_0 = (RuleCall)cActionAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cEventConditionKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cEventConditionAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cEventConditionLogicalConditionParserRuleCall_5_1_0 = (RuleCall)cEventConditionAssignment_5_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//EventDrivenJob returns job::EventDrivenJob:
		//	{job::EventDrivenJob} "EventDrivenJob" "{" ("id" id=EInt)? ("action" action=AbstractJobAction)? ("eventCondition"
		//	eventCondition=LogicalCondition)? "}";
		public ParserRule getRule() { return rule; }

		//{job::EventDrivenJob} "EventDrivenJob" "{" ("id" id=EInt)? ("action" action=AbstractJobAction)? ("eventCondition"
		//eventCondition=LogicalCondition)? "}"
		public Group getGroup() { return cGroup; }

		//{job::EventDrivenJob}
		public Action getEventDrivenJobAction_0() { return cEventDrivenJobAction_0; }

		//"EventDrivenJob"
		public Keyword getEventDrivenJobKeyword_1() { return cEventDrivenJobKeyword_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//("id" id=EInt)?
		public Group getGroup_3() { return cGroup_3; }

		//"id"
		public Keyword getIdKeyword_3_0() { return cIdKeyword_3_0; }

		//id=EInt
		public Assignment getIdAssignment_3_1() { return cIdAssignment_3_1; }

		//EInt
		public RuleCall getIdEIntParserRuleCall_3_1_0() { return cIdEIntParserRuleCall_3_1_0; }

		//("action" action=AbstractJobAction)?
		public Group getGroup_4() { return cGroup_4; }

		//"action"
		public Keyword getActionKeyword_4_0() { return cActionKeyword_4_0; }

		//action=AbstractJobAction
		public Assignment getActionAssignment_4_1() { return cActionAssignment_4_1; }

		//AbstractJobAction
		public RuleCall getActionAbstractJobActionParserRuleCall_4_1_0() { return cActionAbstractJobActionParserRuleCall_4_1_0; }

		//("eventCondition" eventCondition=LogicalCondition)?
		public Group getGroup_5() { return cGroup_5; }

		//"eventCondition"
		public Keyword getEventConditionKeyword_5_0() { return cEventConditionKeyword_5_0; }

		//eventCondition=LogicalCondition
		public Assignment getEventConditionAssignment_5_1() { return cEventConditionAssignment_5_1; }

		//LogicalCondition
		public RuleCall getEventConditionLogicalConditionParserRuleCall_5_1_0() { return cEventConditionLogicalConditionParserRuleCall_5_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class PeriodicJobElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PeriodicJob");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cPeriodicJobAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cPeriodicJobKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cIdKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cIdAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cIdEIntParserRuleCall_3_1_0 = (RuleCall)cIdAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cTimerKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cTimerAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cTimerELongParserRuleCall_4_1_0 = (RuleCall)cTimerAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cActionKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cActionAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cActionAbstractJobActionParserRuleCall_5_1_0 = (RuleCall)cActionAssignment_5_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//PeriodicJob returns job::PeriodicJob:
		//	{job::PeriodicJob} "PeriodicJob" "{" ("id" id=EInt)? ("timer" timer=ELong)? ("action" action=AbstractJobAction)? "}";
		public ParserRule getRule() { return rule; }

		//{job::PeriodicJob} "PeriodicJob" "{" ("id" id=EInt)? ("timer" timer=ELong)? ("action" action=AbstractJobAction)? "}"
		public Group getGroup() { return cGroup; }

		//{job::PeriodicJob}
		public Action getPeriodicJobAction_0() { return cPeriodicJobAction_0; }

		//"PeriodicJob"
		public Keyword getPeriodicJobKeyword_1() { return cPeriodicJobKeyword_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//("id" id=EInt)?
		public Group getGroup_3() { return cGroup_3; }

		//"id"
		public Keyword getIdKeyword_3_0() { return cIdKeyword_3_0; }

		//id=EInt
		public Assignment getIdAssignment_3_1() { return cIdAssignment_3_1; }

		//EInt
		public RuleCall getIdEIntParserRuleCall_3_1_0() { return cIdEIntParserRuleCall_3_1_0; }

		//("timer" timer=ELong)?
		public Group getGroup_4() { return cGroup_4; }

		//"timer"
		public Keyword getTimerKeyword_4_0() { return cTimerKeyword_4_0; }

		//timer=ELong
		public Assignment getTimerAssignment_4_1() { return cTimerAssignment_4_1; }

		//ELong
		public RuleCall getTimerELongParserRuleCall_4_1_0() { return cTimerELongParserRuleCall_4_1_0; }

		//("action" action=AbstractJobAction)?
		public Group getGroup_5() { return cGroup_5; }

		//"action"
		public Keyword getActionKeyword_5_0() { return cActionKeyword_5_0; }

		//action=AbstractJobAction
		public Assignment getActionAssignment_5_1() { return cActionAssignment_5_1; }

		//AbstractJobAction
		public RuleCall getActionAbstractJobActionParserRuleCall_5_1_0() { return cActionAbstractJobActionParserRuleCall_5_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class RequestReplayJobElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RequestReplayJob");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cRequestReplayJobAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cRequestReplayJobKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cIdKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cIdAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cIdEIntParserRuleCall_3_1_0 = (RuleCall)cIdAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cActionKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cActionAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cActionAbstractJobActionParserRuleCall_4_1_0 = (RuleCall)cActionAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//RequestReplayJob returns job::RequestReplayJob:
		//	{job::RequestReplayJob} "RequestReplayJob" "{" ("id" id=EInt)? ("action" action=AbstractJobAction)? "}";
		public ParserRule getRule() { return rule; }

		//{job::RequestReplayJob} "RequestReplayJob" "{" ("id" id=EInt)? ("action" action=AbstractJobAction)? "}"
		public Group getGroup() { return cGroup; }

		//{job::RequestReplayJob}
		public Action getRequestReplayJobAction_0() { return cRequestReplayJobAction_0; }

		//"RequestReplayJob"
		public Keyword getRequestReplayJobKeyword_1() { return cRequestReplayJobKeyword_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//("id" id=EInt)?
		public Group getGroup_3() { return cGroup_3; }

		//"id"
		public Keyword getIdKeyword_3_0() { return cIdKeyword_3_0; }

		//id=EInt
		public Assignment getIdAssignment_3_1() { return cIdAssignment_3_1; }

		//EInt
		public RuleCall getIdEIntParserRuleCall_3_1_0() { return cIdEIntParserRuleCall_3_1_0; }

		//("action" action=AbstractJobAction)?
		public Group getGroup_4() { return cGroup_4; }

		//"action"
		public Keyword getActionKeyword_4_0() { return cActionKeyword_4_0; }

		//action=AbstractJobAction
		public Assignment getActionAssignment_4_1() { return cActionAssignment_4_1; }

		//AbstractJobAction
		public RuleCall getActionAbstractJobActionParserRuleCall_4_1_0() { return cActionAbstractJobActionParserRuleCall_4_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class SenseForwardActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SenseForwardAction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSenseForwardActionAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cSenseForwardActionKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cSinkNodeKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cSinkNodeAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cSinkNodeSinkNodeCrossReference_3_1_0 = (CrossReference)cSinkNodeAssignment_3_1.eContents().get(0);
		private final RuleCall cSinkNodeSinkNodeEStringParserRuleCall_3_1_0_1 = (RuleCall)cSinkNodeSinkNodeCrossReference_3_1_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cTargetNodeKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cTargetNodeAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cTargetNodeAbstractNodeCrossReference_4_1_0 = (CrossReference)cTargetNodeAssignment_4_1.eContents().get(0);
		private final RuleCall cTargetNodeAbstractNodeEStringParserRuleCall_4_1_0_1 = (RuleCall)cTargetNodeAbstractNodeCrossReference_4_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//SenseForwardAction returns actions::SenseForwardAction:
		//	{actions::SenseForwardAction} "SenseForwardAction" "{" ("sinkNode" sinkNode=[node::SinkNode|EString])? ("targetNode"
		//	targetNode=[node::AbstractNode|EString])? "}";
		public ParserRule getRule() { return rule; }

		//{actions::SenseForwardAction} "SenseForwardAction" "{" ("sinkNode" sinkNode=[node::SinkNode|EString])? ("targetNode"
		//targetNode=[node::AbstractNode|EString])? "}"
		public Group getGroup() { return cGroup; }

		//{actions::SenseForwardAction}
		public Action getSenseForwardActionAction_0() { return cSenseForwardActionAction_0; }

		//"SenseForwardAction"
		public Keyword getSenseForwardActionKeyword_1() { return cSenseForwardActionKeyword_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//("sinkNode" sinkNode=[node::SinkNode|EString])?
		public Group getGroup_3() { return cGroup_3; }

		//"sinkNode"
		public Keyword getSinkNodeKeyword_3_0() { return cSinkNodeKeyword_3_0; }

		//sinkNode=[node::SinkNode|EString]
		public Assignment getSinkNodeAssignment_3_1() { return cSinkNodeAssignment_3_1; }

		//[node::SinkNode|EString]
		public CrossReference getSinkNodeSinkNodeCrossReference_3_1_0() { return cSinkNodeSinkNodeCrossReference_3_1_0; }

		//EString
		public RuleCall getSinkNodeSinkNodeEStringParserRuleCall_3_1_0_1() { return cSinkNodeSinkNodeEStringParserRuleCall_3_1_0_1; }

		//("targetNode" targetNode=[node::AbstractNode|EString])?
		public Group getGroup_4() { return cGroup_4; }

		//"targetNode"
		public Keyword getTargetNodeKeyword_4_0() { return cTargetNodeKeyword_4_0; }

		//targetNode=[node::AbstractNode|EString]
		public Assignment getTargetNodeAssignment_4_1() { return cTargetNodeAssignment_4_1; }

		//[node::AbstractNode|EString]
		public CrossReference getTargetNodeAbstractNodeCrossReference_4_1_0() { return cTargetNodeAbstractNodeCrossReference_4_1_0; }

		//EString
		public RuleCall getTargetNodeAbstractNodeEStringParserRuleCall_4_1_0_1() { return cTargetNodeAbstractNodeEStringParserRuleCall_4_1_0_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class AggregationActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AggregationAction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cAggregationActionAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cAggregationActionKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cAggregationKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cAggregationAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cAggregationAggregationEnumRuleCall_3_1_0 = (RuleCall)cAggregationAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cSinkNodeKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cSinkNodeAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cSinkNodeSinkNodeCrossReference_4_1_0 = (CrossReference)cSinkNodeAssignment_4_1.eContents().get(0);
		private final RuleCall cSinkNodeSinkNodeEStringParserRuleCall_4_1_0_1 = (RuleCall)cSinkNodeSinkNodeCrossReference_4_1_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cTargetNodeKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cTargetNodeAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final CrossReference cTargetNodeAbstractNodeCrossReference_5_1_0 = (CrossReference)cTargetNodeAssignment_5_1.eContents().get(0);
		private final RuleCall cTargetNodeAbstractNodeEStringParserRuleCall_5_1_0_1 = (RuleCall)cTargetNodeAbstractNodeCrossReference_5_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//AggregationAction returns actions::AggregationAction:
		//	{actions::AggregationAction} "AggregationAction" "{" ("aggregation" aggregation=Aggregation)? ("sinkNode"
		//	sinkNode=[node::SinkNode|EString])? ("targetNode" targetNode=[node::AbstractNode|EString])? "}";
		public ParserRule getRule() { return rule; }

		//{actions::AggregationAction} "AggregationAction" "{" ("aggregation" aggregation=Aggregation)? ("sinkNode"
		//sinkNode=[node::SinkNode|EString])? ("targetNode" targetNode=[node::AbstractNode|EString])? "}"
		public Group getGroup() { return cGroup; }

		//{actions::AggregationAction}
		public Action getAggregationActionAction_0() { return cAggregationActionAction_0; }

		//"AggregationAction"
		public Keyword getAggregationActionKeyword_1() { return cAggregationActionKeyword_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//("aggregation" aggregation=Aggregation)?
		public Group getGroup_3() { return cGroup_3; }

		//"aggregation"
		public Keyword getAggregationKeyword_3_0() { return cAggregationKeyword_3_0; }

		//aggregation=Aggregation
		public Assignment getAggregationAssignment_3_1() { return cAggregationAssignment_3_1; }

		//Aggregation
		public RuleCall getAggregationAggregationEnumRuleCall_3_1_0() { return cAggregationAggregationEnumRuleCall_3_1_0; }

		//("sinkNode" sinkNode=[node::SinkNode|EString])?
		public Group getGroup_4() { return cGroup_4; }

		//"sinkNode"
		public Keyword getSinkNodeKeyword_4_0() { return cSinkNodeKeyword_4_0; }

		//sinkNode=[node::SinkNode|EString]
		public Assignment getSinkNodeAssignment_4_1() { return cSinkNodeAssignment_4_1; }

		//[node::SinkNode|EString]
		public CrossReference getSinkNodeSinkNodeCrossReference_4_1_0() { return cSinkNodeSinkNodeCrossReference_4_1_0; }

		//EString
		public RuleCall getSinkNodeSinkNodeEStringParserRuleCall_4_1_0_1() { return cSinkNodeSinkNodeEStringParserRuleCall_4_1_0_1; }

		//("targetNode" targetNode=[node::AbstractNode|EString])?
		public Group getGroup_5() { return cGroup_5; }

		//"targetNode"
		public Keyword getTargetNodeKeyword_5_0() { return cTargetNodeKeyword_5_0; }

		//targetNode=[node::AbstractNode|EString]
		public Assignment getTargetNodeAssignment_5_1() { return cTargetNodeAssignment_5_1; }

		//[node::AbstractNode|EString]
		public CrossReference getTargetNodeAbstractNodeCrossReference_5_1_0() { return cTargetNodeAbstractNodeCrossReference_5_1_0; }

		//EString
		public RuleCall getTargetNodeAbstractNodeEStringParserRuleCall_5_1_0_1() { return cTargetNodeAbstractNodeEStringParserRuleCall_5_1_0_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class FusionActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FusionAction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cFusionActionAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cFusionActionKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cFusionKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cFusionAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cFusionFusionEnumRuleCall_3_1_0 = (RuleCall)cFusionAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cSinkNodeKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cSinkNodeAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cSinkNodeSinkNodeCrossReference_4_1_0 = (CrossReference)cSinkNodeAssignment_4_1.eContents().get(0);
		private final RuleCall cSinkNodeSinkNodeEStringParserRuleCall_4_1_0_1 = (RuleCall)cSinkNodeSinkNodeCrossReference_4_1_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cCompuNodeKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cCompuNodeAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final CrossReference cCompuNodeComputationNodeCrossReference_5_1_0 = (CrossReference)cCompuNodeAssignment_5_1.eContents().get(0);
		private final RuleCall cCompuNodeComputationNodeEStringParserRuleCall_5_1_0_1 = (RuleCall)cCompuNodeComputationNodeCrossReference_5_1_0.eContents().get(1);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cClusterHeadKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cClusterHeadAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final CrossReference cClusterHeadClusterHeadNodeCrossReference_6_1_0 = (CrossReference)cClusterHeadAssignment_6_1.eContents().get(0);
		private final RuleCall cClusterHeadClusterHeadNodeEStringParserRuleCall_6_1_0_1 = (RuleCall)cClusterHeadClusterHeadNodeCrossReference_6_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//FusionAction returns actions::FusionAction:
		//	{actions::FusionAction} "FusionAction" "{" ("fusion" fusion=Fusion)? ("sinkNode" sinkNode=[node::SinkNode|EString])?
		//	("compuNode" compuNode=[node::ComputationNode|EString])? ("clusterHead" clusterHead=[node::ClusterHeadNode|EString])?
		//	"}";
		public ParserRule getRule() { return rule; }

		//{actions::FusionAction} "FusionAction" "{" ("fusion" fusion=Fusion)? ("sinkNode" sinkNode=[node::SinkNode|EString])?
		//("compuNode" compuNode=[node::ComputationNode|EString])? ("clusterHead" clusterHead=[node::ClusterHeadNode|EString])?
		//"}"
		public Group getGroup() { return cGroup; }

		//{actions::FusionAction}
		public Action getFusionActionAction_0() { return cFusionActionAction_0; }

		//"FusionAction"
		public Keyword getFusionActionKeyword_1() { return cFusionActionKeyword_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//("fusion" fusion=Fusion)?
		public Group getGroup_3() { return cGroup_3; }

		//"fusion"
		public Keyword getFusionKeyword_3_0() { return cFusionKeyword_3_0; }

		//fusion=Fusion
		public Assignment getFusionAssignment_3_1() { return cFusionAssignment_3_1; }

		//Fusion
		public RuleCall getFusionFusionEnumRuleCall_3_1_0() { return cFusionFusionEnumRuleCall_3_1_0; }

		//("sinkNode" sinkNode=[node::SinkNode|EString])?
		public Group getGroup_4() { return cGroup_4; }

		//"sinkNode"
		public Keyword getSinkNodeKeyword_4_0() { return cSinkNodeKeyword_4_0; }

		//sinkNode=[node::SinkNode|EString]
		public Assignment getSinkNodeAssignment_4_1() { return cSinkNodeAssignment_4_1; }

		//[node::SinkNode|EString]
		public CrossReference getSinkNodeSinkNodeCrossReference_4_1_0() { return cSinkNodeSinkNodeCrossReference_4_1_0; }

		//EString
		public RuleCall getSinkNodeSinkNodeEStringParserRuleCall_4_1_0_1() { return cSinkNodeSinkNodeEStringParserRuleCall_4_1_0_1; }

		//("compuNode" compuNode=[node::ComputationNode|EString])?
		public Group getGroup_5() { return cGroup_5; }

		//"compuNode"
		public Keyword getCompuNodeKeyword_5_0() { return cCompuNodeKeyword_5_0; }

		//compuNode=[node::ComputationNode|EString]
		public Assignment getCompuNodeAssignment_5_1() { return cCompuNodeAssignment_5_1; }

		//[node::ComputationNode|EString]
		public CrossReference getCompuNodeComputationNodeCrossReference_5_1_0() { return cCompuNodeComputationNodeCrossReference_5_1_0; }

		//EString
		public RuleCall getCompuNodeComputationNodeEStringParserRuleCall_5_1_0_1() { return cCompuNodeComputationNodeEStringParserRuleCall_5_1_0_1; }

		//("clusterHead" clusterHead=[node::ClusterHeadNode|EString])?
		public Group getGroup_6() { return cGroup_6; }

		//"clusterHead"
		public Keyword getClusterHeadKeyword_6_0() { return cClusterHeadKeyword_6_0; }

		//clusterHead=[node::ClusterHeadNode|EString]
		public Assignment getClusterHeadAssignment_6_1() { return cClusterHeadAssignment_6_1; }

		//[node::ClusterHeadNode|EString]
		public CrossReference getClusterHeadClusterHeadNodeCrossReference_6_1_0() { return cClusterHeadClusterHeadNodeCrossReference_6_1_0; }

		//EString
		public RuleCall getClusterHeadClusterHeadNodeEStringParserRuleCall_6_1_0_1() { return cClusterHeadClusterHeadNodeEStringParserRuleCall_6_1_0_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}

	public class ReadNodeMemoryActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ReadNodeMemoryAction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cReadNodeMemoryActionAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cReadNodeMemoryActionKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cSinkNodeKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cSinkNodeAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cSinkNodeSinkNodeCrossReference_3_1_0 = (CrossReference)cSinkNodeAssignment_3_1.eContents().get(0);
		private final RuleCall cSinkNodeSinkNodeEStringParserRuleCall_3_1_0_1 = (RuleCall)cSinkNodeSinkNodeCrossReference_3_1_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cTargetNodeKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cTargetNodeAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cTargetNodeAbstractNodeCrossReference_4_1_0 = (CrossReference)cTargetNodeAssignment_4_1.eContents().get(0);
		private final RuleCall cTargetNodeAbstractNodeEStringParserRuleCall_4_1_0_1 = (RuleCall)cTargetNodeAbstractNodeCrossReference_4_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//ReadNodeMemoryAction returns actions::ReadNodeMemoryAction:
		//	{actions::ReadNodeMemoryAction} "ReadNodeMemoryAction" "{" ("sinkNode" sinkNode=[node::SinkNode|EString])?
		//	("targetNode" targetNode=[node::AbstractNode|EString])? "}";
		public ParserRule getRule() { return rule; }

		//{actions::ReadNodeMemoryAction} "ReadNodeMemoryAction" "{" ("sinkNode" sinkNode=[node::SinkNode|EString])? ("targetNode"
		//targetNode=[node::AbstractNode|EString])? "}"
		public Group getGroup() { return cGroup; }

		//{actions::ReadNodeMemoryAction}
		public Action getReadNodeMemoryActionAction_0() { return cReadNodeMemoryActionAction_0; }

		//"ReadNodeMemoryAction"
		public Keyword getReadNodeMemoryActionKeyword_1() { return cReadNodeMemoryActionKeyword_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//("sinkNode" sinkNode=[node::SinkNode|EString])?
		public Group getGroup_3() { return cGroup_3; }

		//"sinkNode"
		public Keyword getSinkNodeKeyword_3_0() { return cSinkNodeKeyword_3_0; }

		//sinkNode=[node::SinkNode|EString]
		public Assignment getSinkNodeAssignment_3_1() { return cSinkNodeAssignment_3_1; }

		//[node::SinkNode|EString]
		public CrossReference getSinkNodeSinkNodeCrossReference_3_1_0() { return cSinkNodeSinkNodeCrossReference_3_1_0; }

		//EString
		public RuleCall getSinkNodeSinkNodeEStringParserRuleCall_3_1_0_1() { return cSinkNodeSinkNodeEStringParserRuleCall_3_1_0_1; }

		//("targetNode" targetNode=[node::AbstractNode|EString])?
		public Group getGroup_4() { return cGroup_4; }

		//"targetNode"
		public Keyword getTargetNodeKeyword_4_0() { return cTargetNodeKeyword_4_0; }

		//targetNode=[node::AbstractNode|EString]
		public Assignment getTargetNodeAssignment_4_1() { return cTargetNodeAssignment_4_1; }

		//[node::AbstractNode|EString]
		public CrossReference getTargetNodeAbstractNodeCrossReference_4_1_0() { return cTargetNodeAbstractNodeCrossReference_4_1_0; }

		//EString
		public RuleCall getTargetNodeAbstractNodeEStringParserRuleCall_4_1_0_1() { return cTargetNodeAbstractNodeEStringParserRuleCall_4_1_0_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class WriteNodeMemoryActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "WriteNodeMemoryAction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cWriteNodeMemoryActionAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cWriteNodeMemoryActionKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cSinkNodeKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cSinkNodeAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cSinkNodeSinkNodeCrossReference_3_1_0 = (CrossReference)cSinkNodeAssignment_3_1.eContents().get(0);
		private final RuleCall cSinkNodeSinkNodeEStringParserRuleCall_3_1_0_1 = (RuleCall)cSinkNodeSinkNodeCrossReference_3_1_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cTargetNodeKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cTargetNodeAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cTargetNodeAbstractNodeCrossReference_4_1_0 = (CrossReference)cTargetNodeAssignment_4_1.eContents().get(0);
		private final RuleCall cTargetNodeAbstractNodeEStringParserRuleCall_4_1_0_1 = (RuleCall)cTargetNodeAbstractNodeCrossReference_4_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//WriteNodeMemoryAction returns actions::WriteNodeMemoryAction:
		//	{actions::WriteNodeMemoryAction} "WriteNodeMemoryAction" "{" ("sinkNode" sinkNode=[node::SinkNode|EString])?
		//	("targetNode" targetNode=[node::AbstractNode|EString])? "}";
		public ParserRule getRule() { return rule; }

		//{actions::WriteNodeMemoryAction} "WriteNodeMemoryAction" "{" ("sinkNode" sinkNode=[node::SinkNode|EString])?
		//("targetNode" targetNode=[node::AbstractNode|EString])? "}"
		public Group getGroup() { return cGroup; }

		//{actions::WriteNodeMemoryAction}
		public Action getWriteNodeMemoryActionAction_0() { return cWriteNodeMemoryActionAction_0; }

		//"WriteNodeMemoryAction"
		public Keyword getWriteNodeMemoryActionKeyword_1() { return cWriteNodeMemoryActionKeyword_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//("sinkNode" sinkNode=[node::SinkNode|EString])?
		public Group getGroup_3() { return cGroup_3; }

		//"sinkNode"
		public Keyword getSinkNodeKeyword_3_0() { return cSinkNodeKeyword_3_0; }

		//sinkNode=[node::SinkNode|EString]
		public Assignment getSinkNodeAssignment_3_1() { return cSinkNodeAssignment_3_1; }

		//[node::SinkNode|EString]
		public CrossReference getSinkNodeSinkNodeCrossReference_3_1_0() { return cSinkNodeSinkNodeCrossReference_3_1_0; }

		//EString
		public RuleCall getSinkNodeSinkNodeEStringParserRuleCall_3_1_0_1() { return cSinkNodeSinkNodeEStringParserRuleCall_3_1_0_1; }

		//("targetNode" targetNode=[node::AbstractNode|EString])?
		public Group getGroup_4() { return cGroup_4; }

		//"targetNode"
		public Keyword getTargetNodeKeyword_4_0() { return cTargetNodeKeyword_4_0; }

		//targetNode=[node::AbstractNode|EString]
		public Assignment getTargetNodeAssignment_4_1() { return cTargetNodeAssignment_4_1; }

		//[node::AbstractNode|EString]
		public CrossReference getTargetNodeAbstractNodeCrossReference_4_1_0() { return cTargetNodeAbstractNodeCrossReference_4_1_0; }

		//EString
		public RuleCall getTargetNodeAbstractNodeEStringParserRuleCall_4_1_0_1() { return cTargetNodeAbstractNodeEStringParserRuleCall_4_1_0_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class SendMessageActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SendMessageAction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSendMessageActionAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cSendMessageActionKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cTextKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cTextAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cTextEStringParserRuleCall_3_1_0 = (RuleCall)cTextAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cSinkNodeKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cSinkNodeAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cSinkNodeSinkNodeCrossReference_4_1_0 = (CrossReference)cSinkNodeAssignment_4_1.eContents().get(0);
		private final RuleCall cSinkNodeSinkNodeEStringParserRuleCall_4_1_0_1 = (RuleCall)cSinkNodeSinkNodeCrossReference_4_1_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cTargetNodeKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cTargetNodeAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final CrossReference cTargetNodeAbstractNodeCrossReference_5_1_0 = (CrossReference)cTargetNodeAssignment_5_1.eContents().get(0);
		private final RuleCall cTargetNodeAbstractNodeEStringParserRuleCall_5_1_0_1 = (RuleCall)cTargetNodeAbstractNodeCrossReference_5_1_0.eContents().get(1);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cOutPortKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cOutPortAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final CrossReference cOutPortOutPortCrossReference_6_1_0 = (CrossReference)cOutPortAssignment_6_1.eContents().get(0);
		private final RuleCall cOutPortOutPortEStringParserRuleCall_6_1_0_1 = (RuleCall)cOutPortOutPortCrossReference_6_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//SendMessageAction returns actions::SendMessageAction:
		//	{actions::SendMessageAction} "SendMessageAction" "{" ("text" text=EString)? ("sinkNode"
		//	sinkNode=[node::SinkNode|EString])? ("targetNode" targetNode=[node::AbstractNode|EString])? ("outPort"
		//	outPort=[port::OutPort|EString])? "}";
		public ParserRule getRule() { return rule; }

		//{actions::SendMessageAction} "SendMessageAction" "{" ("text" text=EString)? ("sinkNode"
		//sinkNode=[node::SinkNode|EString])? ("targetNode" targetNode=[node::AbstractNode|EString])? ("outPort"
		//outPort=[port::OutPort|EString])? "}"
		public Group getGroup() { return cGroup; }

		//{actions::SendMessageAction}
		public Action getSendMessageActionAction_0() { return cSendMessageActionAction_0; }

		//"SendMessageAction"
		public Keyword getSendMessageActionKeyword_1() { return cSendMessageActionKeyword_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//("text" text=EString)?
		public Group getGroup_3() { return cGroup_3; }

		//"text"
		public Keyword getTextKeyword_3_0() { return cTextKeyword_3_0; }

		//text=EString
		public Assignment getTextAssignment_3_1() { return cTextAssignment_3_1; }

		//EString
		public RuleCall getTextEStringParserRuleCall_3_1_0() { return cTextEStringParserRuleCall_3_1_0; }

		//("sinkNode" sinkNode=[node::SinkNode|EString])?
		public Group getGroup_4() { return cGroup_4; }

		//"sinkNode"
		public Keyword getSinkNodeKeyword_4_0() { return cSinkNodeKeyword_4_0; }

		//sinkNode=[node::SinkNode|EString]
		public Assignment getSinkNodeAssignment_4_1() { return cSinkNodeAssignment_4_1; }

		//[node::SinkNode|EString]
		public CrossReference getSinkNodeSinkNodeCrossReference_4_1_0() { return cSinkNodeSinkNodeCrossReference_4_1_0; }

		//EString
		public RuleCall getSinkNodeSinkNodeEStringParserRuleCall_4_1_0_1() { return cSinkNodeSinkNodeEStringParserRuleCall_4_1_0_1; }

		//("targetNode" targetNode=[node::AbstractNode|EString])?
		public Group getGroup_5() { return cGroup_5; }

		//"targetNode"
		public Keyword getTargetNodeKeyword_5_0() { return cTargetNodeKeyword_5_0; }

		//targetNode=[node::AbstractNode|EString]
		public Assignment getTargetNodeAssignment_5_1() { return cTargetNodeAssignment_5_1; }

		//[node::AbstractNode|EString]
		public CrossReference getTargetNodeAbstractNodeCrossReference_5_1_0() { return cTargetNodeAbstractNodeCrossReference_5_1_0; }

		//EString
		public RuleCall getTargetNodeAbstractNodeEStringParserRuleCall_5_1_0_1() { return cTargetNodeAbstractNodeEStringParserRuleCall_5_1_0_1; }

		//("outPort" outPort=[port::OutPort|EString])?
		public Group getGroup_6() { return cGroup_6; }

		//"outPort"
		public Keyword getOutPortKeyword_6_0() { return cOutPortKeyword_6_0; }

		//outPort=[port::OutPort|EString]
		public Assignment getOutPortAssignment_6_1() { return cOutPortAssignment_6_1; }

		//[port::OutPort|EString]
		public CrossReference getOutPortOutPortCrossReference_6_1_0() { return cOutPortOutPortCrossReference_6_1_0; }

		//EString
		public RuleCall getOutPortOutPortEStringParserRuleCall_6_1_0_1() { return cOutPortOutPortEStringParserRuleCall_6_1_0_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}

	public class ReceiveMessageActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ReceiveMessageAction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cReceiveMessageActionAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cReceiveMessageActionKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cSinkNodeKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cSinkNodeAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cSinkNodeSinkNodeCrossReference_3_1_0 = (CrossReference)cSinkNodeAssignment_3_1.eContents().get(0);
		private final RuleCall cSinkNodeSinkNodeEStringParserRuleCall_3_1_0_1 = (RuleCall)cSinkNodeSinkNodeCrossReference_3_1_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cTargetNodeKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cTargetNodeAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cTargetNodeAbstractNodeCrossReference_4_1_0 = (CrossReference)cTargetNodeAssignment_4_1.eContents().get(0);
		private final RuleCall cTargetNodeAbstractNodeEStringParserRuleCall_4_1_0_1 = (RuleCall)cTargetNodeAbstractNodeCrossReference_4_1_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cInPortKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cInPortAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final CrossReference cInPortInPortCrossReference_5_1_0 = (CrossReference)cInPortAssignment_5_1.eContents().get(0);
		private final RuleCall cInPortInPortEStringParserRuleCall_5_1_0_1 = (RuleCall)cInPortInPortCrossReference_5_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//ReceiveMessageAction returns actions::ReceiveMessageAction:
		//	{actions::ReceiveMessageAction} "ReceiveMessageAction" "{" ("sinkNode" sinkNode=[node::SinkNode|EString])?
		//	("targetNode" targetNode=[node::AbstractNode|EString])? ("inPort" inPort=[port::InPort|EString])? "}";
		public ParserRule getRule() { return rule; }

		//{actions::ReceiveMessageAction} "ReceiveMessageAction" "{" ("sinkNode" sinkNode=[node::SinkNode|EString])? ("targetNode"
		//targetNode=[node::AbstractNode|EString])? ("inPort" inPort=[port::InPort|EString])? "}"
		public Group getGroup() { return cGroup; }

		//{actions::ReceiveMessageAction}
		public Action getReceiveMessageActionAction_0() { return cReceiveMessageActionAction_0; }

		//"ReceiveMessageAction"
		public Keyword getReceiveMessageActionKeyword_1() { return cReceiveMessageActionKeyword_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//("sinkNode" sinkNode=[node::SinkNode|EString])?
		public Group getGroup_3() { return cGroup_3; }

		//"sinkNode"
		public Keyword getSinkNodeKeyword_3_0() { return cSinkNodeKeyword_3_0; }

		//sinkNode=[node::SinkNode|EString]
		public Assignment getSinkNodeAssignment_3_1() { return cSinkNodeAssignment_3_1; }

		//[node::SinkNode|EString]
		public CrossReference getSinkNodeSinkNodeCrossReference_3_1_0() { return cSinkNodeSinkNodeCrossReference_3_1_0; }

		//EString
		public RuleCall getSinkNodeSinkNodeEStringParserRuleCall_3_1_0_1() { return cSinkNodeSinkNodeEStringParserRuleCall_3_1_0_1; }

		//("targetNode" targetNode=[node::AbstractNode|EString])?
		public Group getGroup_4() { return cGroup_4; }

		//"targetNode"
		public Keyword getTargetNodeKeyword_4_0() { return cTargetNodeKeyword_4_0; }

		//targetNode=[node::AbstractNode|EString]
		public Assignment getTargetNodeAssignment_4_1() { return cTargetNodeAssignment_4_1; }

		//[node::AbstractNode|EString]
		public CrossReference getTargetNodeAbstractNodeCrossReference_4_1_0() { return cTargetNodeAbstractNodeCrossReference_4_1_0; }

		//EString
		public RuleCall getTargetNodeAbstractNodeEStringParserRuleCall_4_1_0_1() { return cTargetNodeAbstractNodeEStringParserRuleCall_4_1_0_1; }

		//("inPort" inPort=[port::InPort|EString])?
		public Group getGroup_5() { return cGroup_5; }

		//"inPort"
		public Keyword getInPortKeyword_5_0() { return cInPortKeyword_5_0; }

		//inPort=[port::InPort|EString]
		public Assignment getInPortAssignment_5_1() { return cInPortAssignment_5_1; }

		//[port::InPort|EString]
		public CrossReference getInPortInPortCrossReference_5_1_0() { return cInPortInPortCrossReference_5_1_0; }

		//EString
		public RuleCall getInPortInPortEStringParserRuleCall_5_1_0_1() { return cInPortInPortEStringParserRuleCall_5_1_0_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class LogicalConditionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "LogicalCondition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cLogicalConditionAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLogicalConditionKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cJobScheduleKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cJobScheduleAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cJobScheduleJobScheduleEnumRuleCall_3_1_0 = (RuleCall)cJobScheduleAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cSensorTermKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cSensorTermAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cSensorTermEStringParserRuleCall_4_1_0 = (RuleCall)cSensorTermAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cLogicalSymbolKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cLogicalSymbolAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cLogicalSymbolLogicalSymbolEnumRuleCall_5_1_0 = (RuleCall)cLogicalSymbolAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cValueKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cValueAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cValueELongParserRuleCall_6_1_0 = (RuleCall)cValueAssignment_6_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cUnitKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cUnitAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cUnitEStringParserRuleCall_7_1_0 = (RuleCall)cUnitAssignment_7_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//LogicalCondition:
		//	{LogicalCondition} "LogicalCondition" "{" ("jobSchedule" jobSchedule=JobSchedule)? ("sensorTerm" sensorTerm=EString)?
		//	("logicalSymbol" logicalSymbol=LogicalSymbol)? ("value" value=ELong)? ("unit" unit=EString)? "}";
		public ParserRule getRule() { return rule; }

		//{LogicalCondition} "LogicalCondition" "{" ("jobSchedule" jobSchedule=JobSchedule)? ("sensorTerm" sensorTerm=EString)?
		//("logicalSymbol" logicalSymbol=LogicalSymbol)? ("value" value=ELong)? ("unit" unit=EString)? "}"
		public Group getGroup() { return cGroup; }

		//{LogicalCondition}
		public Action getLogicalConditionAction_0() { return cLogicalConditionAction_0; }

		//"LogicalCondition"
		public Keyword getLogicalConditionKeyword_1() { return cLogicalConditionKeyword_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//("jobSchedule" jobSchedule=JobSchedule)?
		public Group getGroup_3() { return cGroup_3; }

		//"jobSchedule"
		public Keyword getJobScheduleKeyword_3_0() { return cJobScheduleKeyword_3_0; }

		//jobSchedule=JobSchedule
		public Assignment getJobScheduleAssignment_3_1() { return cJobScheduleAssignment_3_1; }

		//JobSchedule
		public RuleCall getJobScheduleJobScheduleEnumRuleCall_3_1_0() { return cJobScheduleJobScheduleEnumRuleCall_3_1_0; }

		//("sensorTerm" sensorTerm=EString)?
		public Group getGroup_4() { return cGroup_4; }

		//"sensorTerm"
		public Keyword getSensorTermKeyword_4_0() { return cSensorTermKeyword_4_0; }

		//sensorTerm=EString
		public Assignment getSensorTermAssignment_4_1() { return cSensorTermAssignment_4_1; }

		//EString
		public RuleCall getSensorTermEStringParserRuleCall_4_1_0() { return cSensorTermEStringParserRuleCall_4_1_0; }

		//("logicalSymbol" logicalSymbol=LogicalSymbol)?
		public Group getGroup_5() { return cGroup_5; }

		//"logicalSymbol"
		public Keyword getLogicalSymbolKeyword_5_0() { return cLogicalSymbolKeyword_5_0; }

		//logicalSymbol=LogicalSymbol
		public Assignment getLogicalSymbolAssignment_5_1() { return cLogicalSymbolAssignment_5_1; }

		//LogicalSymbol
		public RuleCall getLogicalSymbolLogicalSymbolEnumRuleCall_5_1_0() { return cLogicalSymbolLogicalSymbolEnumRuleCall_5_1_0; }

		//("value" value=ELong)?
		public Group getGroup_6() { return cGroup_6; }

		//"value"
		public Keyword getValueKeyword_6_0() { return cValueKeyword_6_0; }

		//value=ELong
		public Assignment getValueAssignment_6_1() { return cValueAssignment_6_1; }

		//ELong
		public RuleCall getValueELongParserRuleCall_6_1_0() { return cValueELongParserRuleCall_6_1_0; }

		//("unit" unit=EString)?
		public Group getGroup_7() { return cGroup_7; }

		//"unit"
		public Keyword getUnitKeyword_7_0() { return cUnitKeyword_7_0; }

		//unit=EString
		public Assignment getUnitAssignment_7_1() { return cUnitAssignment_7_1; }

		//EString
		public RuleCall getUnitEStringParserRuleCall_7_1_0() { return cUnitEStringParserRuleCall_7_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}

	public class ELongElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ELong");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//ELong returns ecore::ELong:
		//	"-"? INT;
		public ParserRule getRule() { return rule; }

		//"-"? INT
		public Group getGroup() { return cGroup; }

		//"-"?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }

		//INT
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
	}
	
	
	public class InterNodeCommElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "InterNodeComm");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cBTEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cBTBTKeyword_0_0 = (Keyword)cBTEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cZigbeeEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cZigbeeZigbeeKeyword_1_0 = (Keyword)cZigbeeEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cWLanEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cWLanWLanKeyword_2_0 = (Keyword)cWLanEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cRFEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cRFRFKeyword_3_0 = (Keyword)cRFEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum InterNodeComm returns enums::InterNodeComm:
		//	BT | Zigbee | WLan | RF;
		public EnumRule getRule() { return rule; }

		//BT | Zigbee | WLan | RF
		public Alternatives getAlternatives() { return cAlternatives; }

		//BT
		public EnumLiteralDeclaration getBTEnumLiteralDeclaration_0() { return cBTEnumLiteralDeclaration_0; }

		//"BT"
		public Keyword getBTBTKeyword_0_0() { return cBTBTKeyword_0_0; }

		//Zigbee
		public EnumLiteralDeclaration getZigbeeEnumLiteralDeclaration_1() { return cZigbeeEnumLiteralDeclaration_1; }

		//"Zigbee"
		public Keyword getZigbeeZigbeeKeyword_1_0() { return cZigbeeZigbeeKeyword_1_0; }

		//WLan
		public EnumLiteralDeclaration getWLanEnumLiteralDeclaration_2() { return cWLanEnumLiteralDeclaration_2; }

		//"WLan"
		public Keyword getWLanWLanKeyword_2_0() { return cWLanWLanKeyword_2_0; }

		//RF
		public EnumLiteralDeclaration getRFEnumLiteralDeclaration_3() { return cRFEnumLiteralDeclaration_3; }

		//"RF"
		public Keyword getRFRFKeyword_3_0() { return cRFRFKeyword_3_0; }
	}

	public class RoutingProtocolElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "RoutingProtocol");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cLeachEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cLeachLeachKeyword_0_0 = (Keyword)cLeachEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cLqrpEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cLqrpLqrpKeyword_1_0 = (Keyword)cLqrpEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cSpinEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cSpinSpinKeyword_2_0 = (Keyword)cSpinEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cAodvEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cAodvAodvKeyword_3_0 = (Keyword)cAodvEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cDodvEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cDodvDodvKeyword_4_0 = (Keyword)cDodvEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cDsrEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cDsrDsrKeyword_5_0 = (Keyword)cDsrEnumLiteralDeclaration_5.eContents().get(0);
		private final EnumLiteralDeclaration cDsdvEnumLiteralDeclaration_6 = (EnumLiteralDeclaration)cAlternatives.eContents().get(6);
		private final Keyword cDsdvDsdvKeyword_6_0 = (Keyword)cDsdvEnumLiteralDeclaration_6.eContents().get(0);
		private final EnumLiteralDeclaration cGsrEnumLiteralDeclaration_7 = (EnumLiteralDeclaration)cAlternatives.eContents().get(7);
		private final Keyword cGsrGsrKeyword_7_0 = (Keyword)cGsrEnumLiteralDeclaration_7.eContents().get(0);
		private final EnumLiteralDeclaration cHeedEnumLiteralDeclaration_8 = (EnumLiteralDeclaration)cAlternatives.eContents().get(8);
		private final Keyword cHeedHeedKeyword_8_0 = (Keyword)cHeedEnumLiteralDeclaration_8.eContents().get(0);
		private final EnumLiteralDeclaration cGafEnumLiteralDeclaration_9 = (EnumLiteralDeclaration)cAlternatives.eContents().get(9);
		private final Keyword cGafGafKeyword_9_0 = (Keyword)cGafEnumLiteralDeclaration_9.eContents().get(0);
		private final EnumLiteralDeclaration cGearEnumLiteralDeclaration_10 = (EnumLiteralDeclaration)cAlternatives.eContents().get(10);
		private final Keyword cGearGearKeyword_10_0 = (Keyword)cGearEnumLiteralDeclaration_10.eContents().get(0);
		private final EnumLiteralDeclaration cTbfEnumLiteralDeclaration_11 = (EnumLiteralDeclaration)cAlternatives.eContents().get(11);
		private final Keyword cTbfTbfKeyword_11_0 = (Keyword)cTbfEnumLiteralDeclaration_11.eContents().get(0);
		private final EnumLiteralDeclaration cEadEnumLiteralDeclaration_12 = (EnumLiteralDeclaration)cAlternatives.eContents().get(12);
		private final Keyword cEadEadKeyword_12_0 = (Keyword)cEadEnumLiteralDeclaration_12.eContents().get(0);
		private final EnumLiteralDeclaration cPegasisEnumLiteralDeclaration_13 = (EnumLiteralDeclaration)cAlternatives.eContents().get(13);
		private final Keyword cPegasisPegasisKeyword_13_0 = (Keyword)cPegasisEnumLiteralDeclaration_13.eContents().get(0);
		private final EnumLiteralDeclaration cTeenEnumLiteralDeclaration_14 = (EnumLiteralDeclaration)cAlternatives.eContents().get(14);
		private final Keyword cTeenTeenKeyword_14_0 = (Keyword)cTeenEnumLiteralDeclaration_14.eContents().get(0);
		private final EnumLiteralDeclaration cSpeedEnumLiteralDeclaration_15 = (EnumLiteralDeclaration)cAlternatives.eContents().get(15);
		private final Keyword cSpeedSpeedKeyword_15_0 = (Keyword)cSpeedEnumLiteralDeclaration_15.eContents().get(0);
		
		//enum RoutingProtocol returns enums::RoutingProtocol:
		//	leach | lqrp | spin | aodv | dodv | dsr | dsdv | gsr | heed | gaf | gear | tbf | ead | pegasis | teen | speed;
		public EnumRule getRule() { return rule; }

		//leach | lqrp | spin | aodv | dodv | dsr | dsdv | gsr | heed | gaf | gear | tbf | ead | pegasis | teen | speed
		public Alternatives getAlternatives() { return cAlternatives; }

		//leach
		public EnumLiteralDeclaration getLeachEnumLiteralDeclaration_0() { return cLeachEnumLiteralDeclaration_0; }

		//"leach"
		public Keyword getLeachLeachKeyword_0_0() { return cLeachLeachKeyword_0_0; }

		//lqrp
		public EnumLiteralDeclaration getLqrpEnumLiteralDeclaration_1() { return cLqrpEnumLiteralDeclaration_1; }

		//"lqrp"
		public Keyword getLqrpLqrpKeyword_1_0() { return cLqrpLqrpKeyword_1_0; }

		//spin
		public EnumLiteralDeclaration getSpinEnumLiteralDeclaration_2() { return cSpinEnumLiteralDeclaration_2; }

		//"spin"
		public Keyword getSpinSpinKeyword_2_0() { return cSpinSpinKeyword_2_0; }

		//aodv
		public EnumLiteralDeclaration getAodvEnumLiteralDeclaration_3() { return cAodvEnumLiteralDeclaration_3; }

		//"aodv"
		public Keyword getAodvAodvKeyword_3_0() { return cAodvAodvKeyword_3_0; }

		//dodv
		public EnumLiteralDeclaration getDodvEnumLiteralDeclaration_4() { return cDodvEnumLiteralDeclaration_4; }

		//"dodv"
		public Keyword getDodvDodvKeyword_4_0() { return cDodvDodvKeyword_4_0; }

		//dsr
		public EnumLiteralDeclaration getDsrEnumLiteralDeclaration_5() { return cDsrEnumLiteralDeclaration_5; }

		//"dsr"
		public Keyword getDsrDsrKeyword_5_0() { return cDsrDsrKeyword_5_0; }

		//dsdv
		public EnumLiteralDeclaration getDsdvEnumLiteralDeclaration_6() { return cDsdvEnumLiteralDeclaration_6; }

		//"dsdv"
		public Keyword getDsdvDsdvKeyword_6_0() { return cDsdvDsdvKeyword_6_0; }

		//gsr
		public EnumLiteralDeclaration getGsrEnumLiteralDeclaration_7() { return cGsrEnumLiteralDeclaration_7; }

		//"gsr"
		public Keyword getGsrGsrKeyword_7_0() { return cGsrGsrKeyword_7_0; }

		//heed
		public EnumLiteralDeclaration getHeedEnumLiteralDeclaration_8() { return cHeedEnumLiteralDeclaration_8; }

		//"heed"
		public Keyword getHeedHeedKeyword_8_0() { return cHeedHeedKeyword_8_0; }

		//gaf
		public EnumLiteralDeclaration getGafEnumLiteralDeclaration_9() { return cGafEnumLiteralDeclaration_9; }

		//"gaf"
		public Keyword getGafGafKeyword_9_0() { return cGafGafKeyword_9_0; }

		//gear
		public EnumLiteralDeclaration getGearEnumLiteralDeclaration_10() { return cGearEnumLiteralDeclaration_10; }

		//"gear"
		public Keyword getGearGearKeyword_10_0() { return cGearGearKeyword_10_0; }

		//tbf
		public EnumLiteralDeclaration getTbfEnumLiteralDeclaration_11() { return cTbfEnumLiteralDeclaration_11; }

		//"tbf"
		public Keyword getTbfTbfKeyword_11_0() { return cTbfTbfKeyword_11_0; }

		//ead
		public EnumLiteralDeclaration getEadEnumLiteralDeclaration_12() { return cEadEnumLiteralDeclaration_12; }

		//"ead"
		public Keyword getEadEadKeyword_12_0() { return cEadEadKeyword_12_0; }

		//pegasis
		public EnumLiteralDeclaration getPegasisEnumLiteralDeclaration_13() { return cPegasisEnumLiteralDeclaration_13; }

		//"pegasis"
		public Keyword getPegasisPegasisKeyword_13_0() { return cPegasisPegasisKeyword_13_0; }

		//teen
		public EnumLiteralDeclaration getTeenEnumLiteralDeclaration_14() { return cTeenEnumLiteralDeclaration_14; }

		//"teen"
		public Keyword getTeenTeenKeyword_14_0() { return cTeenTeenKeyword_14_0; }

		//speed
		public EnumLiteralDeclaration getSpeedEnumLiteralDeclaration_15() { return cSpeedEnumLiteralDeclaration_15; }

		//"speed"
		public Keyword getSpeedSpeedKeyword_15_0() { return cSpeedSpeedKeyword_15_0; }
	}

	public class PositionElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "Position");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cMobileEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cMobileMobileKeyword_0_0 = (Keyword)cMobileEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cStaticEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cStaticStaticKeyword_1_0 = (Keyword)cStaticEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum Position returns enums::Position:
		//	mobile | static;
		public EnumRule getRule() { return rule; }

		//mobile | static
		public Alternatives getAlternatives() { return cAlternatives; }

		//mobile
		public EnumLiteralDeclaration getMobileEnumLiteralDeclaration_0() { return cMobileEnumLiteralDeclaration_0; }

		//"mobile"
		public Keyword getMobileMobileKeyword_0_0() { return cMobileMobileKeyword_0_0; }

		//static
		public EnumLiteralDeclaration getStaticEnumLiteralDeclaration_1() { return cStaticEnumLiteralDeclaration_1; }

		//"static"
		public Keyword getStaticStaticKeyword_1_0() { return cStaticStaticKeyword_1_0; }
	}

	public class AggregationElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "Aggregation");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cFilteringEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cFilteringFilteringKeyword_0_0 = (Keyword)cFilteringEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cCompressionEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cCompressionCompressionKeyword_1_0 = (Keyword)cCompressionEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cMaxEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cMaxMaxKeyword_2_0 = (Keyword)cMaxEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cMinEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cMinMinKeyword_3_0 = (Keyword)cMinEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cAvgEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cAvgAvgKeyword_4_0 = (Keyword)cAvgEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cCountEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cCountCountKeyword_5_0 = (Keyword)cCountEnumLiteralDeclaration_5.eContents().get(0);
		
		//enum Aggregation returns enums::Aggregation:
		//	filtering | compression | max | min | avg | count;
		public EnumRule getRule() { return rule; }

		//filtering | compression | max | min | avg | count
		public Alternatives getAlternatives() { return cAlternatives; }

		//filtering
		public EnumLiteralDeclaration getFilteringEnumLiteralDeclaration_0() { return cFilteringEnumLiteralDeclaration_0; }

		//"filtering"
		public Keyword getFilteringFilteringKeyword_0_0() { return cFilteringFilteringKeyword_0_0; }

		//compression
		public EnumLiteralDeclaration getCompressionEnumLiteralDeclaration_1() { return cCompressionEnumLiteralDeclaration_1; }

		//"compression"
		public Keyword getCompressionCompressionKeyword_1_0() { return cCompressionCompressionKeyword_1_0; }

		//max
		public EnumLiteralDeclaration getMaxEnumLiteralDeclaration_2() { return cMaxEnumLiteralDeclaration_2; }

		//"max"
		public Keyword getMaxMaxKeyword_2_0() { return cMaxMaxKeyword_2_0; }

		//min
		public EnumLiteralDeclaration getMinEnumLiteralDeclaration_3() { return cMinEnumLiteralDeclaration_3; }

		//"min"
		public Keyword getMinMinKeyword_3_0() { return cMinMinKeyword_3_0; }

		//avg
		public EnumLiteralDeclaration getAvgEnumLiteralDeclaration_4() { return cAvgEnumLiteralDeclaration_4; }

		//"avg"
		public Keyword getAvgAvgKeyword_4_0() { return cAvgAvgKeyword_4_0; }

		//count
		public EnumLiteralDeclaration getCountEnumLiteralDeclaration_5() { return cCountEnumLiteralDeclaration_5; }

		//"count"
		public Keyword getCountCountKeyword_5_0() { return cCountCountKeyword_5_0; }
	}

	public class FusionElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "Fusion");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cClassificationEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cClassificationClassificationKeyword_0_0 = (Keyword)cClassificationEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cEvent_detectionEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cEvent_detectionEvent_detectionKeyword_1_0 = (Keyword)cEvent_detectionEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cTrackingEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cTrackingTrackingKeyword_2_0 = (Keyword)cTrackingEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cDecision_makingEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cDecision_makingDecision_makingKeyword_3_0 = (Keyword)cDecision_makingEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum Fusion returns enums::Fusion:
		//	classification | event_detection | tracking | decision_making;
		public EnumRule getRule() { return rule; }

		//classification | event_detection | tracking | decision_making
		public Alternatives getAlternatives() { return cAlternatives; }

		//classification
		public EnumLiteralDeclaration getClassificationEnumLiteralDeclaration_0() { return cClassificationEnumLiteralDeclaration_0; }

		//"classification"
		public Keyword getClassificationClassificationKeyword_0_0() { return cClassificationClassificationKeyword_0_0; }

		//event_detection
		public EnumLiteralDeclaration getEvent_detectionEnumLiteralDeclaration_1() { return cEvent_detectionEnumLiteralDeclaration_1; }

		//"event_detection"
		public Keyword getEvent_detectionEvent_detectionKeyword_1_0() { return cEvent_detectionEvent_detectionKeyword_1_0; }

		//tracking
		public EnumLiteralDeclaration getTrackingEnumLiteralDeclaration_2() { return cTrackingEnumLiteralDeclaration_2; }

		//"tracking"
		public Keyword getTrackingTrackingKeyword_2_0() { return cTrackingTrackingKeyword_2_0; }

		//decision_making
		public EnumLiteralDeclaration getDecision_makingEnumLiteralDeclaration_3() { return cDecision_makingEnumLiteralDeclaration_3; }

		//"decision_making"
		public Keyword getDecision_makingDecision_makingKeyword_3_0() { return cDecision_makingDecision_makingKeyword_3_0; }
	}

	public class JobScheduleElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "JobSchedule");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cStartEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cStartStartKeyword_0_0 = (Keyword)cStartEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cStopEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cStopStopKeyword_1_0 = (Keyword)cStopEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum JobSchedule returns enums::JobSchedule:
		//	start | stop;
		public EnumRule getRule() { return rule; }

		//start | stop
		public Alternatives getAlternatives() { return cAlternatives; }

		//start
		public EnumLiteralDeclaration getStartEnumLiteralDeclaration_0() { return cStartEnumLiteralDeclaration_0; }

		//"start"
		public Keyword getStartStartKeyword_0_0() { return cStartStartKeyword_0_0; }

		//stop
		public EnumLiteralDeclaration getStopEnumLiteralDeclaration_1() { return cStopEnumLiteralDeclaration_1; }

		//"stop"
		public Keyword getStopStopKeyword_1_0() { return cStopStopKeyword_1_0; }
	}

	public class LogicalSymbolElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "LogicalSymbol");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cEqualEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cEqualEqualKeyword_0_0 = (Keyword)cEqualEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cGreaterThanEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cGreaterThanGreaterThanKeyword_1_0 = (Keyword)cGreaterThanEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cGreaterOrEqualThanEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cGreaterOrEqualThanGreaterOrEqualThanKeyword_2_0 = (Keyword)cGreaterOrEqualThanEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cLessThanEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cLessThanLessThanKeyword_3_0 = (Keyword)cLessThanEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cLessOrEqualThanEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cLessOrEqualThanLessOrEqualThanKeyword_4_0 = (Keyword)cLessOrEqualThanEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cNotEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cNotNotKeyword_5_0 = (Keyword)cNotEnumLiteralDeclaration_5.eContents().get(0);
		
		//enum LogicalSymbol returns enums::LogicalSymbol:
		//	equal | greaterThan | greaterOrEqualThan | lessThan | lessOrEqualThan | not;
		public EnumRule getRule() { return rule; }

		//equal | greaterThan | greaterOrEqualThan | lessThan | lessOrEqualThan | not
		public Alternatives getAlternatives() { return cAlternatives; }

		//equal
		public EnumLiteralDeclaration getEqualEnumLiteralDeclaration_0() { return cEqualEnumLiteralDeclaration_0; }

		//"equal"
		public Keyword getEqualEqualKeyword_0_0() { return cEqualEqualKeyword_0_0; }

		//greaterThan
		public EnumLiteralDeclaration getGreaterThanEnumLiteralDeclaration_1() { return cGreaterThanEnumLiteralDeclaration_1; }

		//"greaterThan"
		public Keyword getGreaterThanGreaterThanKeyword_1_0() { return cGreaterThanGreaterThanKeyword_1_0; }

		//greaterOrEqualThan
		public EnumLiteralDeclaration getGreaterOrEqualThanEnumLiteralDeclaration_2() { return cGreaterOrEqualThanEnumLiteralDeclaration_2; }

		//"greaterOrEqualThan"
		public Keyword getGreaterOrEqualThanGreaterOrEqualThanKeyword_2_0() { return cGreaterOrEqualThanGreaterOrEqualThanKeyword_2_0; }

		//lessThan
		public EnumLiteralDeclaration getLessThanEnumLiteralDeclaration_3() { return cLessThanEnumLiteralDeclaration_3; }

		//"lessThan"
		public Keyword getLessThanLessThanKeyword_3_0() { return cLessThanLessThanKeyword_3_0; }

		//lessOrEqualThan
		public EnumLiteralDeclaration getLessOrEqualThanEnumLiteralDeclaration_4() { return cLessOrEqualThanEnumLiteralDeclaration_4; }

		//"lessOrEqualThan"
		public Keyword getLessOrEqualThanLessOrEqualThanKeyword_4_0() { return cLessOrEqualThanLessOrEqualThanKeyword_4_0; }

		//not
		public EnumLiteralDeclaration getNotEnumLiteralDeclaration_5() { return cNotEnumLiteralDeclaration_5; }

		//"not"
		public Keyword getNotNotKeyword_5_0() { return cNotNotKeyword_5_0; }
	}
	
	private final WSNappElements pWSNapp;
	private final AbstractNetworkElements pAbstractNetwork;
	private final AbstractJobElements pAbstractJob;
	private final AbstractPortElements pAbstractPort;
	private final AbstractSensorElements pAbstractSensor;
	private final AbstractFlatNodeElements pAbstractFlatNode;
	private final AbstractClusterNodeElements pAbstractClusterNode;
	private final AbstractJobActionElements pAbstractJobAction;
	private final AbstractNodeElements pAbstractNode;
	private final OutPortElements pOutPort;
	private final InPortElements pInPort;
	private final EIntElements pEInt;
	private final EStringElements pEString;
	private final InterNodeCommElements unknownRuleInterNodeComm;
	private final RoutingProtocolElements unknownRuleRoutingProtocol;
	private final SinkNodeElements pSinkNode;
	private final FlatNetworkElements pFlatNetwork;
	private final ClusteredNetworkElements pClusteredNetwork;
	private final PositionElements unknownRulePosition;
	private final AccelerometerSensorElements pAccelerometerSensor;
	private final LightSensorElements pLightSensor;
	private final LocationSensorElements pLocationSensor;
	private final MicrophoneSensorElements pMicrophoneSensor;
	private final TemperatureSensorElements pTemperatureSensor;
	private final PressureSensorElements pPressureSensor;
	private final HumiditySensorElements pHumiditySensor;
	private final ChemicalSensorElements pChemicalSensor;
	private final UsbPortElements pUsbPort;
	private final SerialPortElements pSerialPort;
	private final OutPort_ImplElements pOutPort_Impl;
	private final InPort_ImplElements pInPort_Impl;
	private final TransmitterElements pTransmitter;
	private final RecieverElements pReciever;
	private final SensorNodeElements pSensorNode;
	private final ComputationNodeElements pComputationNode;
	private final ClusterElements pCluster;
	private final ClusterHeadNodeElements pClusterHeadNode;
	private final ContinuousJobElements pContinuousJob;
	private final EventDrivenJobElements pEventDrivenJob;
	private final PeriodicJobElements pPeriodicJob;
	private final RequestReplayJobElements pRequestReplayJob;
	private final SenseForwardActionElements pSenseForwardAction;
	private final AggregationActionElements pAggregationAction;
	private final FusionActionElements pFusionAction;
	private final ReadNodeMemoryActionElements pReadNodeMemoryAction;
	private final WriteNodeMemoryActionElements pWriteNodeMemoryAction;
	private final SendMessageActionElements pSendMessageAction;
	private final ReceiveMessageActionElements pReceiveMessageAction;
	private final AggregationElements unknownRuleAggregation;
	private final FusionElements unknownRuleFusion;
	private final LogicalConditionElements pLogicalCondition;
	private final JobScheduleElements unknownRuleJobSchedule;
	private final LogicalSymbolElements unknownRuleLogicalSymbol;
	private final ELongElements pELong;
	
	private final Grammar grammar;

	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public SNDslGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pWSNapp = new WSNappElements();
		this.pAbstractNetwork = new AbstractNetworkElements();
		this.pAbstractJob = new AbstractJobElements();
		this.pAbstractPort = new AbstractPortElements();
		this.pAbstractSensor = new AbstractSensorElements();
		this.pAbstractFlatNode = new AbstractFlatNodeElements();
		this.pAbstractClusterNode = new AbstractClusterNodeElements();
		this.pAbstractJobAction = new AbstractJobActionElements();
		this.pAbstractNode = new AbstractNodeElements();
		this.pOutPort = new OutPortElements();
		this.pInPort = new InPortElements();
		this.pEInt = new EIntElements();
		this.pEString = new EStringElements();
		this.unknownRuleInterNodeComm = new InterNodeCommElements();
		this.unknownRuleRoutingProtocol = new RoutingProtocolElements();
		this.pSinkNode = new SinkNodeElements();
		this.pFlatNetwork = new FlatNetworkElements();
		this.pClusteredNetwork = new ClusteredNetworkElements();
		this.unknownRulePosition = new PositionElements();
		this.pAccelerometerSensor = new AccelerometerSensorElements();
		this.pLightSensor = new LightSensorElements();
		this.pLocationSensor = new LocationSensorElements();
		this.pMicrophoneSensor = new MicrophoneSensorElements();
		this.pTemperatureSensor = new TemperatureSensorElements();
		this.pPressureSensor = new PressureSensorElements();
		this.pHumiditySensor = new HumiditySensorElements();
		this.pChemicalSensor = new ChemicalSensorElements();
		this.pUsbPort = new UsbPortElements();
		this.pSerialPort = new SerialPortElements();
		this.pOutPort_Impl = new OutPort_ImplElements();
		this.pInPort_Impl = new InPort_ImplElements();
		this.pTransmitter = new TransmitterElements();
		this.pReciever = new RecieverElements();
		this.pSensorNode = new SensorNodeElements();
		this.pComputationNode = new ComputationNodeElements();
		this.pCluster = new ClusterElements();
		this.pClusterHeadNode = new ClusterHeadNodeElements();
		this.pContinuousJob = new ContinuousJobElements();
		this.pEventDrivenJob = new EventDrivenJobElements();
		this.pPeriodicJob = new PeriodicJobElements();
		this.pRequestReplayJob = new RequestReplayJobElements();
		this.pSenseForwardAction = new SenseForwardActionElements();
		this.pAggregationAction = new AggregationActionElements();
		this.pFusionAction = new FusionActionElements();
		this.pReadNodeMemoryAction = new ReadNodeMemoryActionElements();
		this.pWriteNodeMemoryAction = new WriteNodeMemoryActionElements();
		this.pSendMessageAction = new SendMessageActionElements();
		this.pReceiveMessageAction = new ReceiveMessageActionElements();
		this.unknownRuleAggregation = new AggregationElements();
		this.unknownRuleFusion = new FusionElements();
		this.pLogicalCondition = new LogicalConditionElements();
		this.unknownRuleJobSchedule = new JobScheduleElements();
		this.unknownRuleLogicalSymbol = new LogicalSymbolElements();
		this.pELong = new ELongElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.nader.sennet.xtext.SNDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//WSNapp:
	//	{WSNapp} "WSNapp" name=EString "{" ("id" id=EInt)? ("network" network=AbstractNetwork)? ("jobs" "{" jobs+=AbstractJob
	//	("," jobs+=AbstractJob)* "}")? "}";
	public WSNappElements getWSNappAccess() {
		return pWSNapp;
	}
	
	public ParserRule getWSNappRule() {
		return getWSNappAccess().getRule();
	}

	//AbstractNetwork returns network::AbstractNetwork:
	//	FlatNetwork | ClusteredNetwork;
	public AbstractNetworkElements getAbstractNetworkAccess() {
		return pAbstractNetwork;
	}
	
	public ParserRule getAbstractNetworkRule() {
		return getAbstractNetworkAccess().getRule();
	}

	//AbstractJob returns job::AbstractJob:
	//	ContinuousJob | EventDrivenJob | PeriodicJob | RequestReplayJob;
	public AbstractJobElements getAbstractJobAccess() {
		return pAbstractJob;
	}
	
	public ParserRule getAbstractJobRule() {
		return getAbstractJobAccess().getRule();
	}

	//AbstractPort returns port::AbstractPort:
	//	UsbPort | SerialPort | OutPort_Impl | InPort_Impl | Transmitter | Reciever;
	public AbstractPortElements getAbstractPortAccess() {
		return pAbstractPort;
	}
	
	public ParserRule getAbstractPortRule() {
		return getAbstractPortAccess().getRule();
	}

	//AbstractSensor returns sensor::AbstractSensor:
	//	AccelerometerSensor | LightSensor | LocationSensor | MicrophoneSensor | TemperatureSensor | PressureSensor |
	//	HumiditySensor | ChemicalSensor;
	public AbstractSensorElements getAbstractSensorAccess() {
		return pAbstractSensor;
	}
	
	public ParserRule getAbstractSensorRule() {
		return getAbstractSensorAccess().getRule();
	}

	//AbstractFlatNode returns node::AbstractFlatNode:
	//	SensorNode | ComputationNode;
	public AbstractFlatNodeElements getAbstractFlatNodeAccess() {
		return pAbstractFlatNode;
	}
	
	public ParserRule getAbstractFlatNodeRule() {
		return getAbstractFlatNodeAccess().getRule();
	}

	//AbstractClusterNode returns node::AbstractClusterNode:
	//	SensorNode | ClusterHeadNode;
	public AbstractClusterNodeElements getAbstractClusterNodeAccess() {
		return pAbstractClusterNode;
	}
	
	public ParserRule getAbstractClusterNodeRule() {
		return getAbstractClusterNodeAccess().getRule();
	}

	//AbstractJobAction returns actions::AbstractJobAction:
	//	SenseForwardAction | AggregationAction | FusionAction | ReadNodeMemoryAction | WriteNodeMemoryAction |
	//	SendMessageAction | ReceiveMessageAction;
	public AbstractJobActionElements getAbstractJobActionAccess() {
		return pAbstractJobAction;
	}
	
	public ParserRule getAbstractJobActionRule() {
		return getAbstractJobActionAccess().getRule();
	}

	//AbstractNode returns node::AbstractNode:
	//	SensorNode | ClusterHeadNode | SinkNode | ComputationNode;
	public AbstractNodeElements getAbstractNodeAccess() {
		return pAbstractNode;
	}
	
	public ParserRule getAbstractNodeRule() {
		return getAbstractNodeAccess().getRule();
	}

	//OutPort returns port::OutPort:
	//	OutPort_Impl | UsbPort | SerialPort | Transmitter;
	public OutPortElements getOutPortAccess() {
		return pOutPort;
	}
	
	public ParserRule getOutPortRule() {
		return getOutPortAccess().getRule();
	}

	//InPort returns port::InPort:
	//	InPort_Impl | UsbPort | SerialPort | Reciever;
	public InPortElements getInPortAccess() {
		return pInPort;
	}
	
	public ParserRule getInPortRule() {
		return getInPortAccess().getRule();
	}

	//EInt returns ecore::EInt:
	//	"-"? INT;
	public EIntElements getEIntAccess() {
		return pEInt;
	}
	
	public ParserRule getEIntRule() {
		return getEIntAccess().getRule();
	}

	//EString returns ecore::EString:
	//	STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}

	//enum InterNodeComm returns enums::InterNodeComm:
	//	BT | Zigbee | WLan | RF;
	public InterNodeCommElements getInterNodeCommAccess() {
		return unknownRuleInterNodeComm;
	}
	
	public EnumRule getInterNodeCommRule() {
		return getInterNodeCommAccess().getRule();
	}

	//enum RoutingProtocol returns enums::RoutingProtocol:
	//	leach | lqrp | spin | aodv | dodv | dsr | dsdv | gsr | heed | gaf | gear | tbf | ead | pegasis | teen | speed;
	public RoutingProtocolElements getRoutingProtocolAccess() {
		return unknownRuleRoutingProtocol;
	}
	
	public EnumRule getRoutingProtocolRule() {
		return getRoutingProtocolAccess().getRule();
	}

	//SinkNode returns node::SinkNode:
	//	{node::SinkNode} "SinkNode" "{" ("id" id=EInt)? ("position" position=Position)? ("ports" "("
	//	ports+=[port::AbstractPort|EString] ("," ports+=[port::AbstractPort|EString])* ")")? ("sensors" "("
	//	sensors+=[sensor::AbstractSensor|EString] ("," sensors+=[sensor::AbstractSensor|EString])* ")")? "}";
	public SinkNodeElements getSinkNodeAccess() {
		return pSinkNode;
	}
	
	public ParserRule getSinkNodeRule() {
		return getSinkNodeAccess().getRule();
	}

	//FlatNetwork returns network::FlatNetwork:
	//	{network::FlatNetwork} "FlatNetwork" "{" ("id" id=EInt)? ("nbOfNodes" nbOfNodes=EInt)? ("interNodeComm"
	//	interNodeComm=InterNodeComm)? ("routingProtocol" routingProtocol=RoutingProtocol)? ("sink"
	//	sink=[node::SinkNode|EString])? ("sensors" "{" sensors+=AbstractSensor ("," sensors+=AbstractSensor)* "}")? ("ports"
	//	"{" ports+=AbstractPort ("," ports+=AbstractPort)* "}")? ("nodes" "{" nodes+=AbstractFlatNode (","
	//	nodes+=AbstractFlatNode)* "}")? "}";
	public FlatNetworkElements getFlatNetworkAccess() {
		return pFlatNetwork;
	}
	
	public ParserRule getFlatNetworkRule() {
		return getFlatNetworkAccess().getRule();
	}

	//ClusteredNetwork returns network::ClusteredNetwork:
	//	{network::ClusteredNetwork} "ClusteredNetwork" "{" ("id" id=EInt)? ("nbOfNodes" nbOfNodes=EInt)? ("interNodeComm"
	//	interNodeComm=InterNodeComm)? ("routingProtocol" routingProtocol=RoutingProtocol)? ("sink"
	//	sink=[node::SinkNode|EString])? ("sensors" "{" sensors+=AbstractSensor ("," sensors+=AbstractSensor)* "}")? ("ports"
	//	"{" ports+=AbstractPort ("," ports+=AbstractPort)* "}")? ("clusters" "{" clusters+=Cluster ("," clusters+=Cluster)*
	//	"}")? "}";
	public ClusteredNetworkElements getClusteredNetworkAccess() {
		return pClusteredNetwork;
	}
	
	public ParserRule getClusteredNetworkRule() {
		return getClusteredNetworkAccess().getRule();
	}

	//enum Position returns enums::Position:
	//	mobile | static;
	public PositionElements getPositionAccess() {
		return unknownRulePosition;
	}
	
	public EnumRule getPositionRule() {
		return getPositionAccess().getRule();
	}

	//AccelerometerSensor returns sensor::AccelerometerSensor:
	//	{sensor::AccelerometerSensor} "AccelerometerSensor";
	public AccelerometerSensorElements getAccelerometerSensorAccess() {
		return pAccelerometerSensor;
	}
	
	public ParserRule getAccelerometerSensorRule() {
		return getAccelerometerSensorAccess().getRule();
	}

	//LightSensor returns sensor::LightSensor:
	//	{sensor::LightSensor} "LightSensor";
	public LightSensorElements getLightSensorAccess() {
		return pLightSensor;
	}
	
	public ParserRule getLightSensorRule() {
		return getLightSensorAccess().getRule();
	}

	//LocationSensor returns sensor::LocationSensor:
	//	{sensor::LocationSensor} "LocationSensor";
	public LocationSensorElements getLocationSensorAccess() {
		return pLocationSensor;
	}
	
	public ParserRule getLocationSensorRule() {
		return getLocationSensorAccess().getRule();
	}

	//MicrophoneSensor returns sensor::MicrophoneSensor:
	//	{sensor::MicrophoneSensor} "MicrophoneSensor";
	public MicrophoneSensorElements getMicrophoneSensorAccess() {
		return pMicrophoneSensor;
	}
	
	public ParserRule getMicrophoneSensorRule() {
		return getMicrophoneSensorAccess().getRule();
	}

	//TemperatureSensor returns sensor::TemperatureSensor:
	//	{sensor::TemperatureSensor} "TemperatureSensor";
	public TemperatureSensorElements getTemperatureSensorAccess() {
		return pTemperatureSensor;
	}
	
	public ParserRule getTemperatureSensorRule() {
		return getTemperatureSensorAccess().getRule();
	}

	//PressureSensor returns sensor::PressureSensor:
	//	{sensor::PressureSensor} "PressureSensor";
	public PressureSensorElements getPressureSensorAccess() {
		return pPressureSensor;
	}
	
	public ParserRule getPressureSensorRule() {
		return getPressureSensorAccess().getRule();
	}

	//HumiditySensor returns sensor::HumiditySensor:
	//	{sensor::HumiditySensor} "HumiditySensor";
	public HumiditySensorElements getHumiditySensorAccess() {
		return pHumiditySensor;
	}
	
	public ParserRule getHumiditySensorRule() {
		return getHumiditySensorAccess().getRule();
	}

	//ChemicalSensor returns sensor::ChemicalSensor:
	//	{sensor::ChemicalSensor} "ChemicalSensor";
	public ChemicalSensorElements getChemicalSensorAccess() {
		return pChemicalSensor;
	}
	
	public ParserRule getChemicalSensorRule() {
		return getChemicalSensorAccess().getRule();
	}

	//UsbPort returns port::UsbPort:
	//	{port::UsbPort} "UsbPort";
	public UsbPortElements getUsbPortAccess() {
		return pUsbPort;
	}
	
	public ParserRule getUsbPortRule() {
		return getUsbPortAccess().getRule();
	}

	//SerialPort returns port::SerialPort:
	//	{port::SerialPort} "SerialPort";
	public SerialPortElements getSerialPortAccess() {
		return pSerialPort;
	}
	
	public ParserRule getSerialPortRule() {
		return getSerialPortAccess().getRule();
	}

	//OutPort_Impl returns port::OutPort:
	//	{port::OutPort} "OutPort";
	public OutPort_ImplElements getOutPort_ImplAccess() {
		return pOutPort_Impl;
	}
	
	public ParserRule getOutPort_ImplRule() {
		return getOutPort_ImplAccess().getRule();
	}

	//InPort_Impl returns port::InPort:
	//	{port::InPort} "InPort";
	public InPort_ImplElements getInPort_ImplAccess() {
		return pInPort_Impl;
	}
	
	public ParserRule getInPort_ImplRule() {
		return getInPort_ImplAccess().getRule();
	}

	//Transmitter returns port::Transmitter:
	//	{port::Transmitter} "Transmitter";
	public TransmitterElements getTransmitterAccess() {
		return pTransmitter;
	}
	
	public ParserRule getTransmitterRule() {
		return getTransmitterAccess().getRule();
	}

	//Reciever returns port::Reciever:
	//	{port::Reciever} "Reciever";
	public RecieverElements getRecieverAccess() {
		return pReciever;
	}
	
	public ParserRule getRecieverRule() {
		return getRecieverAccess().getRule();
	}

	//SensorNode returns node::SensorNode:
	//	{node::SensorNode} "SensorNode" "{" ("id" id=EInt)? ("position" position=Position)? ("ports" "("
	//	ports+=[port::AbstractPort|EString] ("," ports+=[port::AbstractPort|EString])* ")")? ("sensors" "("
	//	sensors+=[sensor::AbstractSensor|EString] ("," sensors+=[sensor::AbstractSensor|EString])* ")")? "}";
	public SensorNodeElements getSensorNodeAccess() {
		return pSensorNode;
	}
	
	public ParserRule getSensorNodeRule() {
		return getSensorNodeAccess().getRule();
	}

	//ComputationNode returns node::ComputationNode:
	//	{node::ComputationNode} "ComputationNode" "{" ("id" id=EInt)? ("position" position=Position)? ("ports" "("
	//	ports+=[port::AbstractPort|EString] ("," ports+=[port::AbstractPort|EString])* ")")? ("sensors" "("
	//	sensors+=[sensor::AbstractSensor|EString] ("," sensors+=[sensor::AbstractSensor|EString])* ")")? "}";
	public ComputationNodeElements getComputationNodeAccess() {
		return pComputationNode;
	}
	
	public ParserRule getComputationNodeRule() {
		return getComputationNodeAccess().getRule();
	}

	//Cluster returns network::Cluster:
	//	{network::Cluster} "Cluster" "{" ("id" id=EInt)? ("resources" "("
	//	resources+=[toplevelstructure::AbstractResource|EString] (","
	//	resources+=[toplevelstructure::AbstractResource|EString])* ")")? ("head" head=ClusterHeadNode)? ("nodes" "{"
	//	nodes+=AbstractClusterNode ("," nodes+=AbstractClusterNode)* "}")? "}";
	public ClusterElements getClusterAccess() {
		return pCluster;
	}
	
	public ParserRule getClusterRule() {
		return getClusterAccess().getRule();
	}

	//ClusterHeadNode returns node::ClusterHeadNode:
	//	{node::ClusterHeadNode} "ClusterHeadNode" "{" ("id" id=EInt)? ("position" position=Position)? ("ports" "("
	//	ports+=[port::AbstractPort|EString] ("," ports+=[port::AbstractPort|EString])* ")")? ("sensors" "("
	//	sensors+=[sensor::AbstractSensor|EString] ("," sensors+=[sensor::AbstractSensor|EString])* ")")? "}";
	public ClusterHeadNodeElements getClusterHeadNodeAccess() {
		return pClusterHeadNode;
	}
	
	public ParserRule getClusterHeadNodeRule() {
		return getClusterHeadNodeAccess().getRule();
	}

	//ContinuousJob returns job::ContinuousJob:
	//	{job::ContinuousJob} "ContinuousJob" "{" ("id" id=EInt)? ("action" action=AbstractJobAction)? "}";
	public ContinuousJobElements getContinuousJobAccess() {
		return pContinuousJob;
	}
	
	public ParserRule getContinuousJobRule() {
		return getContinuousJobAccess().getRule();
	}

	//EventDrivenJob returns job::EventDrivenJob:
	//	{job::EventDrivenJob} "EventDrivenJob" "{" ("id" id=EInt)? ("action" action=AbstractJobAction)? ("eventCondition"
	//	eventCondition=LogicalCondition)? "}";
	public EventDrivenJobElements getEventDrivenJobAccess() {
		return pEventDrivenJob;
	}
	
	public ParserRule getEventDrivenJobRule() {
		return getEventDrivenJobAccess().getRule();
	}

	//PeriodicJob returns job::PeriodicJob:
	//	{job::PeriodicJob} "PeriodicJob" "{" ("id" id=EInt)? ("timer" timer=ELong)? ("action" action=AbstractJobAction)? "}";
	public PeriodicJobElements getPeriodicJobAccess() {
		return pPeriodicJob;
	}
	
	public ParserRule getPeriodicJobRule() {
		return getPeriodicJobAccess().getRule();
	}

	//RequestReplayJob returns job::RequestReplayJob:
	//	{job::RequestReplayJob} "RequestReplayJob" "{" ("id" id=EInt)? ("action" action=AbstractJobAction)? "}";
	public RequestReplayJobElements getRequestReplayJobAccess() {
		return pRequestReplayJob;
	}
	
	public ParserRule getRequestReplayJobRule() {
		return getRequestReplayJobAccess().getRule();
	}

	//SenseForwardAction returns actions::SenseForwardAction:
	//	{actions::SenseForwardAction} "SenseForwardAction" "{" ("sinkNode" sinkNode=[node::SinkNode|EString])? ("targetNode"
	//	targetNode=[node::AbstractNode|EString])? "}";
	public SenseForwardActionElements getSenseForwardActionAccess() {
		return pSenseForwardAction;
	}
	
	public ParserRule getSenseForwardActionRule() {
		return getSenseForwardActionAccess().getRule();
	}

	//AggregationAction returns actions::AggregationAction:
	//	{actions::AggregationAction} "AggregationAction" "{" ("aggregation" aggregation=Aggregation)? ("sinkNode"
	//	sinkNode=[node::SinkNode|EString])? ("targetNode" targetNode=[node::AbstractNode|EString])? "}";
	public AggregationActionElements getAggregationActionAccess() {
		return pAggregationAction;
	}
	
	public ParserRule getAggregationActionRule() {
		return getAggregationActionAccess().getRule();
	}

	//FusionAction returns actions::FusionAction:
	//	{actions::FusionAction} "FusionAction" "{" ("fusion" fusion=Fusion)? ("sinkNode" sinkNode=[node::SinkNode|EString])?
	//	("compuNode" compuNode=[node::ComputationNode|EString])? ("clusterHead" clusterHead=[node::ClusterHeadNode|EString])?
	//	"}";
	public FusionActionElements getFusionActionAccess() {
		return pFusionAction;
	}
	
	public ParserRule getFusionActionRule() {
		return getFusionActionAccess().getRule();
	}

	//ReadNodeMemoryAction returns actions::ReadNodeMemoryAction:
	//	{actions::ReadNodeMemoryAction} "ReadNodeMemoryAction" "{" ("sinkNode" sinkNode=[node::SinkNode|EString])?
	//	("targetNode" targetNode=[node::AbstractNode|EString])? "}";
	public ReadNodeMemoryActionElements getReadNodeMemoryActionAccess() {
		return pReadNodeMemoryAction;
	}
	
	public ParserRule getReadNodeMemoryActionRule() {
		return getReadNodeMemoryActionAccess().getRule();
	}

	//WriteNodeMemoryAction returns actions::WriteNodeMemoryAction:
	//	{actions::WriteNodeMemoryAction} "WriteNodeMemoryAction" "{" ("sinkNode" sinkNode=[node::SinkNode|EString])?
	//	("targetNode" targetNode=[node::AbstractNode|EString])? "}";
	public WriteNodeMemoryActionElements getWriteNodeMemoryActionAccess() {
		return pWriteNodeMemoryAction;
	}
	
	public ParserRule getWriteNodeMemoryActionRule() {
		return getWriteNodeMemoryActionAccess().getRule();
	}

	//SendMessageAction returns actions::SendMessageAction:
	//	{actions::SendMessageAction} "SendMessageAction" "{" ("text" text=EString)? ("sinkNode"
	//	sinkNode=[node::SinkNode|EString])? ("targetNode" targetNode=[node::AbstractNode|EString])? ("outPort"
	//	outPort=[port::OutPort|EString])? "}";
	public SendMessageActionElements getSendMessageActionAccess() {
		return pSendMessageAction;
	}
	
	public ParserRule getSendMessageActionRule() {
		return getSendMessageActionAccess().getRule();
	}

	//ReceiveMessageAction returns actions::ReceiveMessageAction:
	//	{actions::ReceiveMessageAction} "ReceiveMessageAction" "{" ("sinkNode" sinkNode=[node::SinkNode|EString])?
	//	("targetNode" targetNode=[node::AbstractNode|EString])? ("inPort" inPort=[port::InPort|EString])? "}";
	public ReceiveMessageActionElements getReceiveMessageActionAccess() {
		return pReceiveMessageAction;
	}
	
	public ParserRule getReceiveMessageActionRule() {
		return getReceiveMessageActionAccess().getRule();
	}

	//enum Aggregation returns enums::Aggregation:
	//	filtering | compression | max | min | avg | count;
	public AggregationElements getAggregationAccess() {
		return unknownRuleAggregation;
	}
	
	public EnumRule getAggregationRule() {
		return getAggregationAccess().getRule();
	}

	//enum Fusion returns enums::Fusion:
	//	classification | event_detection | tracking | decision_making;
	public FusionElements getFusionAccess() {
		return unknownRuleFusion;
	}
	
	public EnumRule getFusionRule() {
		return getFusionAccess().getRule();
	}

	//LogicalCondition:
	//	{LogicalCondition} "LogicalCondition" "{" ("jobSchedule" jobSchedule=JobSchedule)? ("sensorTerm" sensorTerm=EString)?
	//	("logicalSymbol" logicalSymbol=LogicalSymbol)? ("value" value=ELong)? ("unit" unit=EString)? "}";
	public LogicalConditionElements getLogicalConditionAccess() {
		return pLogicalCondition;
	}
	
	public ParserRule getLogicalConditionRule() {
		return getLogicalConditionAccess().getRule();
	}

	//enum JobSchedule returns enums::JobSchedule:
	//	start | stop;
	public JobScheduleElements getJobScheduleAccess() {
		return unknownRuleJobSchedule;
	}
	
	public EnumRule getJobScheduleRule() {
		return getJobScheduleAccess().getRule();
	}

	//enum LogicalSymbol returns enums::LogicalSymbol:
	//	equal | greaterThan | greaterOrEqualThan | lessThan | lessOrEqualThan | not;
	public LogicalSymbolElements getLogicalSymbolAccess() {
		return unknownRuleLogicalSymbol;
	}
	
	public EnumRule getLogicalSymbolRule() {
		return getLogicalSymbolAccess().getRule();
	}

	//ELong returns ecore::ELong:
	//	"-"? INT;
	public ELongElements getELongAccess() {
		return pELong;
	}
	
	public ParserRule getELongRule() {
		return getELongAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" . / * 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' * / | !("\\" | "\""))* "\"" | "\'" ("\\" .
	//	/ * 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' * / | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
